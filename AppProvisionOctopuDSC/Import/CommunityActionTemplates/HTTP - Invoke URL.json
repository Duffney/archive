{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-97",
  "Name": "HTTP - Invoke URL",
  "ExternalId": "bb2a8fef-1407-405b-9251-a259c1868bad",
  "Description": "Invoke HTTP Get request using provided url. Doesn't throw exception when request fails.",
  "Version": 2,
  "ActionType": "Octopus.Script",
  "Author": "jmalczak",
  "Website": "https://library.octopus.com/step-templates/bb2a8fef-1407-405b-9251-a259c1868bad",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/http-invoke-url.json",
  "Category": "HTTP",
  "Properties": {
    "Octopus.Action.Script.ScriptBody": "# Running outside octopus\nparam(\n    [string]$url,\n    [switch]$whatIf\n) \n\n$ErrorActionPreference = \"Stop\" \n\nfunction Get-Param($Name, [switch]$Required, $Default) {\n    $result = $null\n\n    if ($OctopusParameters -ne $null) {\n        $result = $OctopusParameters[$Name]\n    }\n\n    if ($result -eq $null) {\n        $variable = Get-Variable $Name -EA SilentlyContinue   \n        if ($variable -ne $null) {\n            $result = $variable.Value\n        }\n    }\n\n    if ($result -eq $null -or $result -eq \"\") {\n        if ($Required) {\n            throw \"Missing parameter value $Name\"\n        } else {\n            $result = $Default\n        }\n    }\n\n    return $result\n}\n\n& {\n    param(\n        [string]$url\n    ) \n\n    Write-Host \"Invoke Url: $url\"\n\n    try {\n    \n        Invoke-WebRequest -Uri $url -Method Get -UseBasicParsing\n\n    } catch {\n        Write-Host \"There was a problem invoking Url\"    \n    }\n\n } `\n (Get-Param 'url' -Required)",
    "Octopus.Action.Script.Syntax": "PowerShell"
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "url",
      "Label": "Url",
      "HelpText": "Web request Url",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-89-2018011412241483",
  "LogoAttachmentMimeType": "image/png"
}
{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-170",
  "Name": "RavenDB - Delete File System",
  "ExternalId": "365ae5c6-8f97-4e99-82c8-9973b9b0d8ff",
  "Description": "Used to delete a file system from a server, with a possibility to remove its all data from the hard drive.",
  "Version": 5,
  "ActionType": "Octopus.Script",
  "Author": "timhunt303",
  "Website": "https://library.octopus.com/step-templates/365ae5c6-8f97-4e99-82c8-9973b9b0d8ff",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/ravendb-delete-filesystem.json",
  "Category": "RavenDB",
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptBody": "#--------------------------------------------------------------------\n#Octopus Variables\n\n#URL of RavenFS that is being deleted \n$ravenFileSystemURL = $OctopusParameters[\"ravenFileSystemURL\"]\n\n#name of the RavenFS that is being deleted\n$ravenFileSystemName = $OctopusParameters[\"ravenFileSystemName\"]\n\n#hard delete (true or false)\n$hardDelete = $OctopusParameters[\"hardDelete\"]\n\n#Allow File System to be deleted\n$allowDelete = $OctopusParameters[\"allowDelete\"]\n\n\n\nWrite-Output \"`n-------------------------`n\"\n#--------------------------------------------------------------------\n#checks to see if the File System can be deleted\n\nif($allowDelete -eq $FALSE)\n{\n    Write-Error \"$ravenFileSystemName cannot be deleted. Please try this on a database that can be delete.\" -ErrorId E4\n    Exit 1\n}\n\n\n#--------------------------------------------------------------------\n\n#checks to see if the entered file system exists, return a Boolean value depending on the outcome\nfunction doesRavenFSExist([string] $FSChecking, [string]$URL)\n{\n    #retrieves the list of File Systems at the specified URL\n    $fs_list = Invoke-RestMethod -Uri \"$URL/fs\" -Method Get\n    #checks if the File System is at the specified URL\n    if ($fs_list -contains $FSChecking.ToString()) \n    {\n        return $TRUE\n    }\n    else \n    {\n        return $FALSE\n    }\n\n    \n}#ends does File System exist function\n\n\nWrite-Output \"`n-------------------------`n\"\n\n#--------------------------------------------------------------------\n#check to see if File System exists\n\nWrite-Output \"Checking if $ravenFileSystemName exists\"\n\n$fs_exists = doesRavenFSExist -FSChecking $ravenFileSystemName -URL $ravenFileSystemURL\n\nif($fs_exists -eq $TRUE)\n{\n    Write-Output \"$ravenFileSystemName exists\"\n    $doWork = $TRUE\n}\nelse\n{\n    Write-Warning \"$ravenFileSystemName doesn't exist already.\"\n    $doWork = $FALSE\n}\n\n#--------------------------------------------------------------------\n#converts hard delete option to a string\n\n$hardDeleteString = $hardDelete.ToString().ToLower()\n\n#--------------------------------------------------------------------\n#Delete File System\n\nif($doWork -eq $TRUE)\n{\n\n    Write-Output \"Deleting File System: $ravenFileSystemName\"\n\n    $deleteURI = \"$ravenFileSystemURL/admin/fs/$ravenFileSystemName\" + \"?hard-delete=$hardDeleteString\"\n\n    Invoke-RestMethod -Uri $deleteURI -Method Delete\n\n\n    #Waits 10 seconds before it continues\n    Start-Sleep -Seconds 10\n    \n    Write-Output \"File System has successfuly been deleted\"\n\n}"
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "ravenFileSystemURL",
      "Label": "URL of the Raven Database",
      "HelpText": "The URL of the Raven File System, where the File System is located.\n\nFor example: **http://localhost:8080/**",
      "DefaultValue": "http://localhost:8080/",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "ravenFileSystemName",
      "Label": "Name of the File System",
      "HelpText": "Name of the File System in Raven",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "hardDelete",
      "Label": "Hard Delete",
      "HelpText": "Should all of the data be removed from the hard drive as well",
      "DefaultValue": "True",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "allowDelete",
      "Label": "Allow Deletion",
      "HelpText": "Is the File System allowed to be deleted. **TRUE OR FALSE** value must be entered\n\n**For example**: you don't want a production server to be deleted, the script will stop it from happening\n\n**HINT**: have a variable within Octopus that returns true if it is allowed to be deleted and vice versa.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-161-2018011412241567",
  "LogoAttachmentMimeType": "image/png"
}
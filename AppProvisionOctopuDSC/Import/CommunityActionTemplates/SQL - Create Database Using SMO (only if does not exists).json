{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-208",
  "Name": "SQL - Create Database Using SMO (only if does not exists)",
  "ExternalId": "1f08d4e0-025d-483d-a8d6-efa67fcdd1c1",
  "Description": "This uses Sql Management Objects to create a database.  If the username and password are both empty then it will attempt a trusted connection using integrated security.",
  "Version": 10,
  "ActionType": "Octopus.Script",
  "Author": "alastairtree",
  "Website": "https://library.octopus.com/step-templates/1f08d4e0-025d-483d-a8d6-efa67fcdd1c1",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/sql-smo-create-database.json",
  "Category": "SQL Server",
  "Properties": {
    "Octopus.Action.Script.ScriptBody": "[System.Reflection.Assembly]::LoadWithPartialName(\"Microsoft.SqlServer.SMO\") | out-null\n\n\n$SqlUsername = $OctopusParameters['SqlUsername']\n$SqlServer = $OctopusParameters['SqlServer']\n$SqlPassword = $OctopusParameters['SqlPassword']\n$SqlDatabase = $OctopusParameters['SqlDatabase']\n\ntry\n{    \n    $server = new-object ('Microsoft.SqlServer.Management.Smo.Server') $SqlServer\n  \n    if ($SqlUsername -and $SqlPassword)\n    {\n        Write-Host \"Connecting to $SqlServer as $SqlUsername\"\n        $server.ConnectionContext.LoginSecure = $false\n        $server.ConnectionContext.set_Login($SqlUsername)\n        $server.ConnectionContext.set_Password($SqlPassword)      \n    } \n    else {\n        Write-Host \"Connecting to $SqlServer with integrated security\"\n        $server.ConnectionContext.LoginSecure = $true\n    }\n    \n\tif ($server.databases[$SqlDatabase] -eq $null)\n\t{\n\t    Write-Host \"Creating database $SqlDatabase\"\n    \t$db = New-Object Microsoft.SqlServer.Management.Smo.Database($server, $SqlDatabase)\n        $db.Create()\n\t} else {\n\t    Write-Host \"Database $SqlDatabase already exists, skipping step...\"\n\t}\n}\ncatch\n{    \n    $error[0] | format-list -force\n    Exit 1\n}\n    ",
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.Script.ScriptFileName": "",
    "Octopus.Action.Package.NuGetFeedId": "",
    "Octopus.Action.Package.NuGetPackageId": ""
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "SqlServer",
      "Label": "Sql Server",
      "HelpText": "SQL Server Instance with Port",
      "DefaultValue": "",
      "DisplaySettings": {}
    },
    {
      "Id": null,
      "Name": "SqlUsername",
      "Label": "Sql Username (optional)",
      "HelpText": "The SQL Account which has access to Create SQL Database",
      "DefaultValue": "",
      "DisplaySettings": {}
    },
    {
      "Id": null,
      "Name": "SqlPassword",
      "Label": "Sql Password (optional)",
      "HelpText": "The password for the SQL Account",
      "DefaultValue": "",
      "DisplaySettings": {}
    },
    {
      "Id": null,
      "Name": "SqlDatabase",
      "Label": "Sql Database",
      "HelpText": "Name of Database to be created if not already there",
      "DefaultValue": "",
      "DisplaySettings": {}
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-199-2018011412241603",
  "LogoAttachmentMimeType": "image/png"
}
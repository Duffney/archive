{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-198",
  "Name": "Sitecore Unicorn Sync",
  "ExternalId": "d5adc467-69a8-49ca-b4d0-4f793fad4d62",
  "Description": "Syncs all the specified configurations via the Unicorn remote sync PowerShell script. Uses the newer MicroChap security layer. Please see the following post for instructions: http://www.sitecorenutsbolts.net/2016/03/14/Octopus-Deploy-Step-for-Unicorn-Sync/",
  "Version": 14,
  "ActionType": "Octopus.Script",
  "Author": "GuitarRich",
  "Website": "https://library.octopus.com/step-templates/d5adc467-69a8-49ca-b4d0-4f793fad4d62",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/sitecore-unicorn-sync.json",
  "Category": "Sitecore",
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptBody": "$ErrorActionPreference = 'Stop'\n\nAdd-Type -Path \"${MicroChap}\\MicroCHAP.dll\"\n\nFunction Sync-Unicorn {\n\tParam(\n\t\t[Parameter(Mandatory=$True)]\n\t\t[string]$ControlPanelUrl,\n\n\t\t[Parameter(Mandatory=$True)]\n\t\t[string]$SharedSecret,\n\n\t\t[Parameter(Mandatory=$True)]\n\t\t[string[]]$Configurations,\n\n\t\t[string]$Verb = 'Sync'\n\t)\n\n\t# PARSE THE URL TO REQUEST\n\t$parsedConfigurations = ($Configurations) -join \"^\"\n\n\t$url = \"{0}?verb={1}&configuration={2}\" -f $ControlPanelUrl, $Verb, $parsedConfigurations\n\n\tWrite-Host \"Sync-Unicorn: Preparing authorization for $url\"\n\n\t# GET AN AUTH CHALLENGE\n\t$challenge = Get-Challenge -ControlPanelUrl $ControlPanelUrl\n\n\tWrite-Host \"Sync-Unicorn: Received challenge: $challenge\"\n\n\t# CREATE A SIGNATURE WITH THE SHARED SECRET AND CHALLENGE\n\t$signatureService = New-Object MicroCHAP.SignatureService -ArgumentList $SharedSecret\n\n\t$signature = $signatureService.CreateSignature($challenge, $url, $null)\n\n\tWrite-Host \"Sync-Unicorn: Created signature $signature, executing $Verb...\"\n\n\t# USING THE SIGNATURE, EXECUTE UNICORN\n\t$result = Invoke-WebRequest -Uri $url -Headers @{ \"X-MC-MAC\" = $signature; \"X-MC-Nonce\" = $challenge } -TimeoutSec 10800 -UseBasicParsing\n\n\t$result.Content\n}\n\nFunction Get-Challenge {\n\tParam(\n\t\t[Parameter(Mandatory=$True)]\n\t\t[string]$ControlPanelUrl\n\t)\n\n\t$url = \"$($ControlPanelUrl)?verb=Challenge\"\n\n\t$result = Invoke-WebRequest -Uri $url -TimeoutSec 360 -UseBasicParsing\n\n\t$result.Content\n}\n\n$configs = $Configurations.split(\"`n\")\nSync-Unicorn -ControlPanelUrl \"$($SiteUrl)/unicorn.aspx\" -SharedSecret $SharedSecret -Configurations $configs\n",
    "Octopus.Action.Script.ScriptSource": "Inline"
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "SharedSecret",
      "Label": "Shared Secret",
      "HelpText": "The shared secret used for the MicroChap handshake",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Sensitive"
      }
    },
    {
      "Id": null,
      "Name": "SiteUrl",
      "Label": "Site Url",
      "HelpText": "The Url of your content authoring system. Must be able to view `/unicorn.aspx`",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "MicroChap",
      "Label": "MicroCHAP DLL Location",
      "HelpText": "The location of the MicroCHAP.dll file in your project",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "Configurations",
      "Label": "Configurations",
      "HelpText": "Add a configuration per line",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "MultiLineText"
      }
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-189-2018011412241595",
  "LogoAttachmentMimeType": "image/png"
}
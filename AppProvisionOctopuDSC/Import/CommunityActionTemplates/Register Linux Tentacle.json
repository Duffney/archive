{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-182",
  "Name": "Register Linux Tentacle",
  "ExternalId": "0f119877-288c-4110-aec9-0f693c2e7922",
  "Description": "This Step Template will Register a Linux Tentacle.\nReference : http://docs.octopusdeploy.com/display/OD/SSH+Targets.",
  "Version": 14,
  "ActionType": "Octopus.Script",
  "Author": "mani0070",
  "Website": "https://library.octopus.com/step-templates/0f119877-288c-4110-aec9-0f693c2e7922",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/register-linux-tentacle.json",
  "Category": "Linux",
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.RunOnServer": "false",
    "Octopus.Action.Script.ScriptBody": "$envname = \"#{Octopus.Environment.Name}\"\n$serverurl = \"#{Octopus.Web.BaseUrl}\"\n\n$headers = @{\"X-Octopus-ApiKey\"=\"$apikey\"} \n$environments = Invoke-RestMethod \"$serverurl/api/environments/all\" -Headers $headers -Method Get\n$theEnvironment = $environments | ? { $_.Name -eq $envname }\n\n$machines = Invoke-RestMethod \"$serverurl/api/machines/all\" -Headers $headers -Method Get\n$theMachine = $machines | ? { $_.Name -eq $machineName }\n\n$accounts = Invoke-RestMethod \"$serverurl/api/accounts/all\" -Headers $headers -Method Get\n$theAccount = $accounts | ? { $_.Name -eq $accountname }\n\nif (!($theMachine.Name -eq $machineName))\n{ \n    $discovered = Invoke-RestMethod \"$serverurl/api/machines/discover?host=$hostdetails&type=Ssh\" -Headers $headers -Method Get\n    $discovered.Roles += \"$role\"\n    $discovered.EnvironmentIds += $theEnvironment.Id\n    $discovered.Endpoint.AccountId = $theAccount.Id\n    $discovered.Name = $machineName\n\n    $discovered | ConvertTo-Json -Depth 10\n\n    $registerStatus = Invoke-RestMethod \"$serverurl/api/machines\" -Headers $headers -Method Post -Body ($discovered | ConvertTo-Json -Depth 10)\n\n    If ($registerStatus.Status -eq \"Online\")\n    {\n        Write-Output \"$registerStatus.Name is Successfully Registered\"\n    }\n    else\n    {\n        Write-Warning \"$hostdetails had issues, Please check Environments Page\"\n    }\n}\nelse\n{\n    Write-Output \"Machine with name $machineName already exists with the status $($theMachine.Status)\" \n}",
    "Octopus.Action.Script.ScriptFileName": "",
    "Octopus.Action.Package.FeedId": "",
    "Octopus.Action.Package.PackageId": ""
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "apikey",
      "Label": "API Key",
      "HelpText": "API Key with appropriate access",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "accountname",
      "Label": "Account Name",
      "HelpText": "The Account Name with access to the Host name to register",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "hostdetails",
      "Label": "HostName/IPaddress",
      "HelpText": "HostName or IPaddress of the Machine to register",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "role",
      "Label": "Role Name",
      "HelpText": null,
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "machineName",
      "Label": "Machine Name",
      "HelpText": "Machine Name to register",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-173-2018011412241576",
  "LogoAttachmentMimeType": "image/png"
}
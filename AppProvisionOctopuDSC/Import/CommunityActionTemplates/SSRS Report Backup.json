{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-223",
  "Name": "SSRS Report Backup",
  "ExternalId": "69c9eb25-9005-47c3-abb6-032e2ef909e3",
  "Description": "Automatically performs a back up of all SSRS reports on an SSRS Server.",
  "Version": 2,
  "ActionType": "Octopus.Script",
  "Author": "bleep-io",
  "Website": "https://library.octopus.com/step-templates/69c9eb25-9005-47c3-abb6-032e2ef909e3",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/ssrs-report-backup.json",
  "Category": "SQL Server",
  "Properties": {
    "Octopus.Action.Script.ScriptBody": "\n[void][System.Reflection.Assembly]::LoadWithPartialName(\"System.Xml.XmlDocument\");\n[void][System.Reflection.Assembly]::LoadWithPartialName(\"System.IO\");\n \n$reportServerName = $reportServer;\n$ReportServiceWebServiceURL = \"http://$reportServerName/ReportServer/\"\n$ssrsVersion = $version;\n$exportFolder = $folder;\n\n\nif ($ssrsVersion -gt 2005) \n\t{\n\t\t# SSRS 2008/2012\n\t\t$reportServerUri = \"$ReportServiceWebServiceURL/ReportService2010.asmx\" -f $reportServerName\n\t} else {\n\t\t# SSRS 2005\n\t\t$reportServerUri = \"$ReportServiceWebServiceURL/ReportService2005.asmx\" -f $reportServerName\n\t}\n\n\n$Proxy = New-WebServiceProxy -Uri $reportServerUri -Namespace SSRS.ReportingService2005 -UseDefaultCredential ;\n\n\nif ($ssrsVersion -gt 2005) {\t\t \n\t\t$items = $Proxy.ListChildren(\"/\", $true) | `\n\t\t\t\t Select-Object TypeName, Path, ID, Name | `\n\t\t\t\t Where-Object {$_.typeName -eq \"Report\"};\n\t} else {\n\t\t$items = $Proxy.ListChildren(\"/\", $true) | `\n             Select-Object Type, Path, ID, Name | `\n             Where-Object {$_.type -eq \"Report\"};\n\t}\n\n\n$folderName = $exportFolder + \"\\\" + (Get-Date -format \"yyyy-MM-dd-hhmmtt\");\n\n \nforeach($item in $items)\n{\n\n    $subfolderName = split-path $item.Path;\n    $reportName = split-path $item.Path -Leaf;\n    $fullSubfolderName = $folderName + $fullFolderName + $subfolderName;\n    if(-not(Test-Path $fullSubfolderName))\n    {\n\n        [System.IO.Directory]::CreateDirectory($fullSubfolderName) | out-null\n    }\n \n    $rdlFile = New-Object System.Xml.XmlDocument;\n    [byte[]] $reportDefinition = $null;\n    \n    if ($ssrsVersion -gt 2005) {\n\t\t\t$reportDefinition = $Proxy.GetItemDefinition($item.Path);\n\t\t} else {\n\t\t\t$reportDefinition = $Proxy.GetReportDefinition($item.Path);\n\t\t}\n    \n    [System.IO.MemoryStream] $memStream = New-Object System.IO.MemoryStream(@(,$reportDefinition));\n    $rdlFile.Load($memStream);\n \n    $fullReportFileName = $fullSubfolderName + \"\\\" + $item.Name +  \".rdl\";\n    \n    Write-Output $fullReportFileName;\n    \n    $rdlFile.Save($fullReportFileName);\n    \n \n}",
    "Octopus.Action.Script.Syntax": "PowerShell"
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "reportServer",
      "Label": "SSRS URL",
      "HelpText": "The URL of the Report Server including any ports.",
      "DefaultValue": "localhost",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "version",
      "Label": "SSRS Version",
      "HelpText": "The version of your SSRS instance e.g. 2005, 2008, 2012",
      "DefaultValue": "2008",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "folder",
      "Label": "Export Folder",
      "HelpText": "The folder on the Deployment machine where the reports should be Saved.",
      "DefaultValue": "c:\\temp\\",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-214-2018011412241612",
  "LogoAttachmentMimeType": "image/png"
}
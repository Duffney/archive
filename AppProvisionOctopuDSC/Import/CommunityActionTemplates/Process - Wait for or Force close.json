{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-161",
  "Name": "Process - Wait for or Force close",
  "ExternalId": "2d59d5b6-1dc3-424e-9279-676393933efd",
  "Description": "Waits a set amount of time for a process to close and optionally force closes the process after the timeout expires.",
  "Version": 0,
  "ActionType": "Octopus.Script",
  "Author": "svenkle",
  "Website": "https://library.octopus.com/step-templates/2d59d5b6-1dc3-424e-9279-676393933efd",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/windows-wait-for-or-force-close-application.json",
  "Category": "Windows",
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptBody": "$seconds = $OctopusParameters['Seconds']\n$forceCloseOnTimeout = $OctopusParameters['Force']\n$processName = $OctopusParameters['ProcessName']\n$timeout = new-timespan -Seconds $seconds\n$stopwatch = [diagnostics.stopwatch]::StartNew()\n\n# Check if the process is even running\nif (Get-Process $processName -ErrorAction silentlycontinue)\n{\n    Write-Host \"Waiting $seconds seconds for process '$processName' to terminate\"\n} \nelse \n{\n    Write-Host \"Process '$processName' is not running\"\n    return\n}\n\n# Count down waiting for the process to stop gracefully\nwhile ($stopwatch.elapsed -lt $timeout)\n{\n    # Check process is running\n    if (Get-Process $processName -ErrorAction silentlycontinue) \n    {\n        Write-Host \"Waiting...\"\n    }\n    else \n    {\n        Write-Host \"Process '$processName' is no longer running\"\n        return\n    }\n\n    # Wait for a while\n    Start-Sleep -seconds 1\n}\n\n# Force close the process if set\nif($forceCloseOnTimeout â€“eq $TRUE)\n{\n    Write-Host \"Force closing process $processName\"\n    Stop-Process -processname $processName -Force\n    Write-Host \"Process '$processName' is no longer running\"\n    return\n}\n\nWrite-Host \"Process $processName didn't close within the allocated time\"\nWrite-Host \"Continuing anyway\""
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "Seconds",
      "Label": "Seconds",
      "HelpText": "The number of seconds to wait before forcefully killing the application",
      "DefaultValue": "10",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "Force",
      "Label": "Force Kill",
      "HelpText": "Whether or not the application should be forcefully killed after the timeout has expired.",
      "DefaultValue": "True",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "ProcessName",
      "Label": "Process Name",
      "HelpText": "The name of the process to wait for",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-152-2018011412241562",
  "LogoAttachmentMimeType": "image/png"
}
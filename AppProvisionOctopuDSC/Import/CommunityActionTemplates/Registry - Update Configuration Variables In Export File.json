{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-183",
  "Name": "Registry - Update Configuration Variables In Export File",
  "ExternalId": "7f9c1f6d-8305-4a37-a4c6-9b47ea4699d9",
  "Description": "Replace values in a .reg file (Registry Export) automatically with octopus variables.",
  "Version": 2,
  "ActionType": "Octopus.Script",
  "Author": "jbennett",
  "Website": "https://library.octopus.com/step-templates/7f9c1f6d-8305-4a37-a4c6-9b47ea4699d9",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/registry-update-configuration-variables-in-export-file.json",
  "Category": "Windows",
  "Properties": {
    "Octopus.Action.Script.ScriptBody": "# Running outside octopus\nparam(\n    [string]$regExports\n) \n\n$ErrorActionPreference = \"Stop\" \n\nfunction Get-Param($Name, [switch]$Required, $Default) {\n    $result = $null\n\n    if ($OctopusParameters -ne $null) {\n        $result = $OctopusParameters[$Name]\n    }\n\n    if ($result -eq $null) {\n        $variable = Get-Variable $Name -EA SilentlyContinue   \n        if ($variable -ne $null) {\n            $result = $variable.Value\n        }\n    }\n\n    if ($result -eq $null) {\n        if ($Required) {\n            throw \"Missing parameter value $Name\"\n        } else {\n            $result = $Default\n        }\n    }\n\n    return $result\n}\n\n# More custom functions would go here\n\n& {\n    param(\n        [string]$regExports\n    ) \n\n    Write-Host \"Registry Export Configuration Variables\"\n    Write-Host \"regExports: $regExports\"\n\n    ForEach ($regExp in $regExports.Split(';'))  {\n        \n        $regFile = $regExp.Trim()\n        \n        if( $regFile.Length -lt 1 ){ break }\n\n        $output = \"\"\n\n        $fi=Get-Item $regFile\n        $file=$fi.OpenText()\n\n        While(!($file.EndOfStream)){\n            $line=$file.ReadLine()\n            $outputLine = $line\n\n            if($line -match \"`\"=`\"\"){\n                $keyValue = $line -split \"`\"=`\"\"\n                $key = $keyValue[0] -replace \"^`\"\" , \"\"\n                $oldVal = $keyValue[1] -replace \"`\"$\" , \"\"\n                $newVal = $OctopusParameters[$key]\n                \n                Write-Host \"Looking for key $key in OctopusParameters hash\"\n\n                if($newVal){\n                    Write-Host \"Updating $key from $oldVal to $newVal\"\n                    $outputLine = \"`\"$key`\"=`\"$newVal`\"\"\n                }\n            }\n            \n            $output += $outputLine + \"`r`n\"\n        }\n\n        $output | Out-File \"c:\\temp\\output.reg\"\n    }\n\n } `\n(Get-Param 'regExports' -Required)",
    "Octopus.Action.Script.Syntax": "PowerShell"
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "regExports",
      "Label": "Registry Exports",
      "HelpText": "A list of .reg files (Registry exports) separated by a ;",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "MultiLineText"
      }
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-174-2018011412241577",
  "LogoAttachmentMimeType": "image/png"
}
{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-168",
  "Name": "RavenDB - Create File System",
  "ExternalId": "35e74a1b-3d6a-4d68-be07-51d0dfb56f23",
  "Description": "Used to create a new file system on a server",
  "Version": 3,
  "ActionType": "Octopus.Script",
  "Author": "timhunt303",
  "Website": "https://library.octopus.com/step-templates/35e74a1b-3d6a-4d68-be07-51d0dfb56f23",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/ravendb-create-filesystem.json",
  "Category": "RavenDB",
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptBody": "#--------------------------------------------------------------------\n#File System Octopus Variables\n\n#URL of RavenFS that is being deleted \n$ravenFileSystemURL = $OctopusParameters[\"ravenFileSystemURL\"]\n\n#name of the RavenFS that is being deleted\n$ravenFileSystemName = $OctopusParameters[\"ravenFileSystemName\"]\n\n#--------------------------------------------------------------------\n#Settings Octopus Variables\n\n#Name of Active Bundles (Replication; Versioning; etc) (Default is none)\n$ravenActiveBundles = $OctopusParameters[\"ravenActiveBundles\"]\n\n#storage Type Name (esent or voron)\n$ravenStorageTypeName = $OctopusParameters[\"ravenStorageTypeName\"]\n\n#directory the database will be located on the server\n$ravenDataDir = $OctopusParameters[\"ravenDataDir\"]\n\n#allow incremental back ups: boolean\n$allowIncrementalBackups = $OctopusParameters[\"allowIncrementalBackups\"]\n\n#temporary files will be created at this location\n$voronTempPath = $OctopusParameters[\"voronTempPath\"]\n\n#The path for the esent logs\n$esentLogsPath = $OctopusParameters[\"esentLogsPath\"]\n\n#The path for the indexes on a disk\n$indexStoragePath = $OctopusParameters[\"indexStoragePath\"]\n\n\n#--------------------------------------------------------------------\n\n#checks to see if the entered file system exists, return a Boolean value depending on the outcome\nfunction doesRavenFSExist([string] $FSChecking, [string]$URL)\n{\n    #retrieves the list of File Systems at the specified URL\n    $fs_list = Invoke-RestMethod -Uri \"$URL/fs\" -Method Get\n    #checks if the File System is at the specified URL\n    if ($fs_list -contains $FSChecking.ToString()) \n    {\n        return $TRUE\n    }\n    else \n    {\n        return $FALSE\n    }\n\n    \n}#ends does File System exist function\n\n\nWrite-Output \"`n-------------------------`n\"\n\n#--------------------------------------------------------------------\n#check to see if File System exists\n\nWrite-Output \"Checking if $ravenFileSystemName exists\"\n\n$fs_exists = doesRavenFSExist -FSChecking $ravenFileSystemName -URL $ravenFileSystemURL\n\nif($fs_exists -eq $TRUE)\n{\n    Write-Error \"$ravenFileSystemName already exists\" -ErrorId E4\n    Exit 1\n}\nelse\n{\n    Write-Output \"$ravenFileSystemName doesn't exist. Creating $ravenFileSystemName now\"\n}\n\n\nWrite-Output \"`n-------------------------`n\"\n\n#--------------------------------------------------------------------\n#check setting variables \n\nif($ravenActiveBundles -eq $null)\n{\n   $ravenActiveBundles = \"\" \n}\n\nif($ravenDataDir -eq \"\")\n{\n    Write-Warning \"A directory for the database has NOT been entered. The default directory ~\\Databases\\System is being used.\"\n    $ravenDataDir  = \"~\\Databases\\System\"\n}\n\nif($esentLogsPath -eq \"\")\n{\n    Write-Warning \"The path for the esent logs has NOT been entered. The default path of ~/Data/Logs will be used\"\n    $esentLogsPath =  \"~/Data/Logs\"\n}\n\nif($indexStoragePath -eq \"\")\n{\n    Write-Warning \"The path for the indexes has NOT been entered. The default path of ~/Data/Indexes will be used\"\n    $indexStoragePath = \"~/Data/Indexes\"\n}\n\n\n$ravenDataDir = $ravenDataDir.Replace(\"\\\", \"\\\\\")\n\n$voronTempPath = $voronTempPath.Replace(\"\\\", \"\\\\\")\n\n$esentLogsPath = $esentLogsPath.Replace(\"\\\", \"\\\\\")\n\n$indexStoragePath = $indexStoragePath.Replace(\"\\\", \"\\\\\")\n\n$ravenDataDir = $ravenDataDir.Replace(\"DB\", \"FS\")\n\n$voronTempPath = $voronTempPath.Replace(\"DB\", \"FS\")\n\n$esentLogsPath = $esentLogsPath.Replace(\"DB\", \"FS\")\n\n$indexStoragePath = $indexStoragePath.Replace(\"DB\", \"FS\")\n\nWrite-Output \"`n-------------------------`n\"\n\n#--------------------------------------------------------------------\n#file system settings\n\n\n$fs_settings = @\"\n{\n   \"Settings\":\n   {\n   \"Raven/ActiveBundles\": \"$ravenActiveBundles\",\n    \"Raven/StorageTypeName\": \"$ravenStorageTypeName\",\n    \"Raven/DataDir\": \"$ravenDataDir\",\n    \"Raven/Voron/AllowIncrementalBackups\": \"$allowIncrementalBackups\",\n    \"Raven/Voron/TempPath\": \"$voronTempPath\",\n    \"Raven/Esent/LogsPath\": \"$esentLogsPath\",\n    \"Raven/IndexStoragePath\": \"$indexStoragePath\"\n   }\n}\n\"@\n\n#--------------------------------------------------------------------\n#Create File System\n\nWrite-Output \"Creating File System: $ravenFileSystemName\"\n\n$createURI = \"$ravenFileSystemURL/admin/fs/$ravenFileSystemName\"\n\nInvoke-RestMethod -Uri $createURI -Body $fs_settings -Method Put\n\nWrite-Output \"$ravenFileSystemName created.\"\n"
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "ravenFileSystemURL",
      "Label": "URL of RavenDB",
      "HelpText": "URL of the RavenDB, where you would like the file system to be created. \n\nFor example **http://localhost:8080/**",
      "DefaultValue": "http://localhost:8080/",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "ravenFileSystemName",
      "Label": "Name of the File System",
      "HelpText": "Name the new File System will be called. Make sure the name is not being used already within this instance of RavenDB",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "ravenActiveBundles",
      "Label": "Active Bundles",
      "HelpText": "A settings option, Active Bundles refers bundles that RavenDB has (Replication;Versioning; etc)",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "ravenStorageTypeName",
      "Label": "Name of the Storage Type",
      "HelpText": "What storage type to use",
      "DefaultValue": "Esent",
      "DisplaySettings": {
        "Octopus.ControlType": "Select",
        "Octopus.SelectOptions": "Esent| Esent\nVoron| Voron"
      }
    },
    {
      "Id": null,
      "Name": "ravenDataDir",
      "Label": "Path for the database directory",
      "HelpText": "The path for the database directory on the server",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "allowIncrementalBackups",
      "Label": "Allow Incremental Backups",
      "HelpText": "Allow Incremental Backups to be perform on this Database",
      "DefaultValue": "False",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "voronTempPath",
      "Label": "Path to Temporary Files",
      "HelpText": "A different path where the temporary files will be stored",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "esentLogsPath",
      "Label": "Path for the Esent Logs",
      "HelpText": "The path for the Esent logs",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "indexStoragePath",
      "Label": "Path for the Indexes",
      "HelpText": "The path for the indexes on a disk, if you want to store the indexes on another HDD for performance reasons",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-159-2018011412241566",
  "LogoAttachmentMimeType": "image/png"
}
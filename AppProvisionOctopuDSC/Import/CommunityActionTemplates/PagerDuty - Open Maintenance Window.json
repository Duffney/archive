{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-155",
  "Name": "PagerDuty - Open Maintenance Window",
  "ExternalId": "93a10982-f675-42cd-ac3a-46ef28a46afa",
  "Description": "Open a new maintenance window for the specified services.\n\nNo new incidents will be created for a service that is currently in maintenance.\n\nThis script sets an output variable **WindowId** that can be used in the _PagerDuty - Close Maintenance Window_ template.",
  "Version": 15,
  "ActionType": "Octopus.Script",
  "Author": "nskerl",
  "Website": "https://library.octopus.com/step-templates/93a10982-f675-42cd-ac3a-46ef28a46afa",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/pagerduty-open-maintenance-window.json",
  "Category": "PagerDuty",
  "Properties": {
    "Octopus.Action.Script.ScriptBody": "param(\n    [array]$ServiceIds = @(\"\"),\n    [string]$RequesterId = \"\",\n    [string]$Description = \"\",\n    [int]$Minutes = 10,\n    [string]$Subdomain = \"\",\n    [string]$Token = \"\"\n) \n\n$ErrorActionPreference = \"Stop\" \n\nfunction Get-Param($Name, [switch]$Required, $Default) {\n    $Result = $null\n\n    if ($OctopusParameters -ne $null) {\n        $Result = $OctopusParameters[$Name]\n    }\n\n    if ($Result -eq $null) {\n        $variable = Get-Variable $Name -EA SilentlyContinue   \n        if ($variable -ne $null) {\n            $Result = $variable.Value\n        }\n    }\n\n    if ($Result -eq $null -or $Result -eq \"\") {\n        if ($Required) {\n            throw \"Missing parameter value $Name\"\n        } else {\n            $Result = $Default\n        }\n    }\n\n    return $Result\n}\n\n& {\n    param([array]$ServiceIds, [string]$RequesterId, [string]$Description, [int]$Minutes, [string]$Subdomain, [string]$Token)\n\n    Write-Host \"Opening PagerDuty window for $Description\"\n\n    try {\n        $ArrayOfServices = $ServiceIds.split(\",\") | foreach { $_.trim() }\n        $Start = ((Get-Date)).ToString(\"yyyy-MM-ddTHH:mm:sszzzzZ\");\n        $End = ((Get-Date).AddMinutes($Minutes)).ToString(\"yyyy-MM-ddTHH:mm:sszzzzZ\");\n\n        Write-Host \"Window will be open from $Start -> $End\"\n\n        $Post = @{\n            'maintenance_window'= @{\n                'start_time' = $Start\n                'end_time' = $End\n                'description' = $Description\n                'service_ids' = @($ArrayOfServices)\n            }\n            'requester_id' = $RequesterId\n        } | ConvertTo-Json \n\n        $ResponseObj = Invoke-RestMethod -Uri (\"https://$Subdomain.pagerduty.com/api/v1/maintenance_windows\") -method Post -Body $Post -ContentType \"application/json\" -Headers @{\"Authorization\"=(\"Token token=$Token\")}\n        $WindowId = $ResponseObj.maintenance_window.id\n\n        Write-Host \"Window Id $WindowId created\"\n\n        if(Get-Command -name \"Set-OctopusVariable\" -ErrorAction SilentlyContinue) {\n            Set-OctopusVariable -name \"WindowId\" -value $WindowId\n        } else {\n            Write-Host \"Octopus output variable not set\"\n        }\n    } catch [System.Exception] {\n        Write-Host \"Error while opening PagerDuty window\"\n        Write-Host $_.Exception.Message\n        \n        $ResponseStream = $_.Exception.Response.GetResponseStream()\n        $Reader = New-Object System.IO.StreamReader($ResponseStream)\n        $Reader.ReadToEnd() | Write-Host\n        \n        Exit 1\n    }\n} (Get-Param 'ServiceIds' -Required) (Get-Param 'RequesterId' -Required) (Get-Param 'Description' -Required) (Get-Param 'Minutes' -Required) (Get-Param 'Subdomain' -Required) (Get-Param 'Token' -Required)",
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.RunOnServer": "false"
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "Minutes",
      "Label": "Minutes",
      "HelpText": "The length of the maintenance window in minutes.",
      "DefaultValue": "60",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "RequesterId",
      "Label": "RequesterId",
      "HelpText": "The user id of the user creating the maintenance window.\n\nFound here: https://mydomain.pagerduty.com/users/**ABC123**",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "Token",
      "Label": "Token",
      "HelpText": "The API token of the PagerDuty instance.\n\nFound here: https://mydomain.pagerduty.com/api_keys",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "Description",
      "Label": "Description",
      "HelpText": "A description for this maintenance window.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "ServiceIds",
      "Label": "ServiceIds",
      "HelpText": "A comma separated list of the service ids that are affected by this maintenance window.\n\nFound here: https://mydomain.pagerduty.com/services/**ABC123**\n\nExample: ABC123, ABC456",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "Subdomain",
      "Label": "Subdomain",
      "HelpText": "The subdomain of the PagerDuty instance.\n\nFound here: https://**mydomain**.pagerduty.com/",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-146-2018011412241553",
  "LogoAttachmentMimeType": "image/png"
}
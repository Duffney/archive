{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-38",
  "Name": "ClickOnce - Create from deployed package",
  "ExternalId": "1b7909be-4870-4f81-8957-8357b9342c0f",
  "Description": "Create binaries manifest & CO application and sign them with given code sign certificate ... using mage.exe.",
  "Version": 28,
  "ActionType": "Octopus.Script",
  "Author": "Grendizr",
  "Website": "https://library.octopus.com/step-templates/1b7909be-4870-4f81-8957-8357b9342c0f",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/clickonce-from-deployed-package.json",
  "Category": "ClickOnce",
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.Script.ScriptBody": "Write-Host \"Building clickonce application ...\"\n\nfunction Validate-Parameter([REF]$f, $name, $value) {\n    if (!$value) {\n        throw ('Missing required value for parameter ''{0}''.' -f $name)\n    }\n    \n    $f.Value = $value\n    Write-Host \"Parameters [$name] has been initialized with : [$value]\"\n}\n\n### Parameters\n$deployStepName = $null\n$appName = $null\n$exeFileName = $null\n$destinationPath = $null\n$certFilePath = $null\n$certPassword = $null\n$publisher = $null\n$mageExe = $null\n$version = $null\n$binariesFolderPath = $null\n$coAppName = $null\n$iconFile = $null\n\nValidate-Parameter ([REF]$deployStepName) 'Deploy step name to read binaries from' $OctopusParameters['DeployStepName']\nValidate-Parameter ([REF]$appName) 'Project name' $OctopusParameters['Octopus.Project.Name']\nValidate-Parameter ([REF]$coAppName) 'Application display name' $OctopusParameters['DisplayName']\n\nValidate-Parameter ([REF]$exeFileName) 'Executable file name' $OctopusParameters['ExeFileName']\nValidate-Parameter ([REF]$destinationPath) 'Path to the directory where to deploy the ClickOnce package' $OctopusParameters['DestinationPath']\nValidate-Parameter ([REF]$certFilePath) 'Path to the certification file' $OctopusParameters['SignCertFilePath']\nValidate-Parameter ([REF]$certPassword) 'Password of the certification file' $OctopusParameters['SignCertPassword']\nValidate-Parameter ([REF]$publisher) 'Publisher name' $OctopusParameters['Publisher']\nValidate-Parameter ([REF]$mageExe) 'Path to the mage.exe' $OctopusParameters['MageExePath']\nValidate-Parameter ([REF]$iconFile) 'Icon file' $OctopusParameters['IconFile']\n\n### end of parameters\n\nValidate-Parameter ([REF]$version) 'Version number (from release)' $OctopusParameters['Octopus.Release.Number']\n\n$binariesFolderParameter = -join(\"Octopus.Action[\",$deployStepName,\"].Output.Package.InstallationDirectoryPath\")\nWrite-Host \"Trying to get Installation folder parameter value for : [$binariesFolderParameter]\"\n\n$binariesFolderPath = $OctopusParameters[$binariesFolderParameter]\nif(!$binariesFolderPath){\n     throw ('Unable to retrieve binaries path from previous step execution for step with name ''{0}''.' -f $deployStepName)\n}\n\n$appVersionAndNumber = -join($appName, \"_\", $version)\n$packageDestinationSubDirectory = -join (\"Application_Files/\", $appVersionAndNumber)\n$packageDestinationPath = -join ($destinationPath, \"/\", $packageDestinationSubDirectory) \n$appManifestRelativePath = -join (\"Application_Files/\",$appVersionAndNumber, \"/\", $exeFileName, \".manifest\")\n$appManifestFilePath = -join ($binariesFolderPath, \"/\", $exeFileName, \".manifest\")\n\n$coAppFilePath = -join($binariesFolderPath, \"\\\", $appName, \".application\")\n$coAppFilePathServer = -join($destinationPath, \"\\\", $appName, \".application\")\n\n### Create Application manifest\nWrite-Host \"Creating application manifest at \"$appManifestFilePath\n& $mageExe -New Application -t \"$appManifestFilePath\" -n \"$coAppName\" -v $version -p msil -fd \"$binariesFolderPath\" -tr FullTrust -a sha256RSA -if $iconFile\nWrite-Host \"Signing application manifest ...\"\n& $mageExe -Sign \"$appManifestFilePath\" -cf $certFilePath -pwd $certPassword\n\n### Create Deployment application\nWrite-Host \"Creating CO application [$coAppName] at \"$coAppFilePath\n& $mageExe -New Deployment -t \"$coAppFilePath\" -n \"$coAppName\" -v $version -p msil -appm $appManifestFilePath -ip true -i true -um true -pub $publisher -pu \"$coAppFilePathServer\" -appc $appManifestRelativePath -a sha256RSA\n\nWrite-Host \"Updating minimum version to force auto-update\"\n& $mageExe -Update $coAppFilePath -mv $version -pub $publisher -a sha256RSA\n\nWrite-Host \"Changing expiration max age => before application startup (hacking xml) of \"$coAppFilePath\n$content = Get-Content $coAppFilePath\n$content -replace \"<expiration maximumAge=`\"0`\" unit=`\"days`\" />\", \"<beforeApplicationStartup />\" | set-content $coAppFilePath\n\nWrite-Host \"Signing CO application [$coAppName] ...\"\n& $mageExe -Sign \"$coAppFilePath\" -cf $certFilePath -pwd $certPassword\n\n\nWrite-Host \"Copying binaries from \"$binariesFolderPath\nWrite-Host \"to destination \"$packageDestinationPath\n\n### Remove any existing files from the package destination folder\nRemove-Item $packageDestinationPath -Recurse -ErrorAction SilentlyContinue\n\n### Ensure target directory exists in order not to fail the copy\nNew-Item $packageDestinationPath -ItemType directory > $null\n\n### Copy binaries to destination folder\nCopy-Item $binariesFolderPath\"/*\" $packageDestinationPath -recurse -Force > $null\nCopy-Item $coAppFilePath $destinationPath -Force > $null\n\nWrite-Host \"Building clickonce application script completed.\"\n",
    "Octopus.Action.Script.ScriptFileName": "",
    "Octopus.Action.Package.NuGetFeedId": "",
    "Octopus.Action.Package.NuGetPackageId": ""
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "DeployStepName",
      "Label": "Deploy step to read binaries from",
      "HelpText": "Name of the previous step used to deploy binaries that will be packed in CO package",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "StepName"
      }
    },
    {
      "Id": null,
      "Name": "DestinationPath",
      "Label": "Path to the directory where to deploy the ClickOnce package",
      "HelpText": "Path to the target directory for the ClickOnce package. This will contain the created *.application file and the \"Application Files\" folder",
      "DefaultValue": "\\\\MyServer\\MyClickOnceRepo\\#{Octopus.Project.Name}\\#{Octopus.Environment.Name}",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "ExeFileName",
      "Label": "Name of the target executable file",
      "HelpText": "Name of the executable file of the application to pack",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "Publisher",
      "Label": "Publisher name",
      "HelpText": "Publisher name to use when creating the CO package",
      "DefaultValue": "MyCompany",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "SignCertFilePath",
      "Label": "Path to the certification file",
      "HelpText": "Path to the certification pfx file",
      "DefaultValue": "\\\\MyServer\\Auth\\cert\\my-cert.pfx",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "SignCertPassword",
      "Label": "Password of the certification file",
      "HelpText": null,
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Sensitive"
      }
    },
    {
      "Id": null,
      "Name": "MageExePath",
      "Label": "Path to mage.exe",
      "HelpText": "Path to mage.exe which is used to update manifest and .application files and sign them.",
      "DefaultValue": "\\\\MyServer\\Tools\\Octopus\\Tentacles\\mage.exe",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "IconFile",
      "Label": "Icon filename",
      "HelpText": "Name of icon file in the package, eg. ApplicationIcon.ico",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "DisplayName",
      "Label": "Application display name",
      "HelpText": "Name which appears in the Start Menu",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-32-2018011412241435",
  "LogoAttachmentMimeType": "image/png"
}
{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-3",
  "Name": "Amazon Chime - Post Message",
  "ExternalId": "6042d737-5902-0729-ae57-8b6650a299da",
  "Description": "Posts a message to a Chime chat room using webhooks.",
  "Version": 14,
  "ActionType": "Octopus.Script",
  "Author": "vlouwagie",
  "Website": "https://library.octopus.com/step-templates/6042d737-5902-0729-ae57-8b6650a299da",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/amazon-chime-post-message.json",
  "Category": "Amazon Chime",
  "Properties": {
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptBody": "$_WebHookUrl = $OctopusParameters['acpm_WebHookURL']\n$_ContentPayload = $OctopusParameters['acpm_ContentPayload']\n$_WarningOnFailure = [System.Convert]::ToBoolean($OctopusParameters['acpm_WarningOnFailure'])\n\ntry {\n  #Encode the content message as JSON. ConvertTo-JSON adds quotes to the string.\n  $_EncodedContentPayload = $_ContentPayload | ConvertTo-JSON\n\n  #Create a JSON object that Chime wants\n  #https://docs.aws.amazon.com/chime/latest/ug/webhooks.html\n  $_JsonPayload = '{\"Content\":'\n  $_JsonPayload += $_EncodedContentPayload\n  $_JsonPayload += '}'\n\n  Write-Host \"Sending message to webhook.\"\n  Write-Host \"------ Message ------\"\n  Write-Host \"$_ContentPayload\"\n  Write-Host \"---- End Message ----\"\n\t\n  #Make the request and send the payload\n  Invoke-WebRequest \"$_WebHookUrl\" -UseBasicParsing -ContentType \"application/json\" -Method POST -Body $_JsonPayload | Out-Null\n  Write-Host \"Message successfully sent to webhook.\"\n}\ncatch {\n  #If WarningOnFailure is not true, then write an error and fail the deployment.\n  if($_WarningOnFailure -eq $false) {\n    Write-Error \"Could not send message to Chime web hook.\"\n    if(!([string]::IsNullOrEmpty($_.Exception.Message))) {\n      Write-Error \"Exception Message: $($_.Exception.Message)\"\n    }\n  }\n  #Else, just write a warning and continue on.\n  else {\n    Write-Warning \"Could not send message to Chime web hook.\"\n    if(!([string]::IsNullOrEmpty($_.Exception.Message))) {\n      Write-Warning \"Exception Message: $($_.Exception.Message)\"\n    }\n  }\n}"
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "acpm_WebHookURL",
      "Label": "Web Hook URL",
      "HelpText": "The chat room webhook URL. For more information on Amazon Chime webhooks, visit their [documentation page](https://docs.aws.amazon.com/chime/latest/ug/webhooks.html).\n\n_Note: Only chat room admins can create webhooks._",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "acpm_ContentPayload",
      "Label": "Message",
      "HelpText": "The message that you want to display in the Chat Room. \n\n_Line breaks and web links are supported._",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "MultiLineText"
      }
    },
    {
      "Id": null,
      "Name": "acpm_WarningOnFailure",
      "Label": "Generate Warning on Failure?",
      "HelpText": "If checked and this step template fails to execute correctly, the script will use Write-Warning instead of Write-Error, and the deployment won't fail.",
      "DefaultValue": "True",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-281-2018032008440748",
  "LogoAttachmentMimeType": "image/png"
}
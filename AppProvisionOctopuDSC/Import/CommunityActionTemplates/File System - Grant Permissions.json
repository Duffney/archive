{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-82",
  "Name": "File System - Grant Permissions",
  "ExternalId": "b77d55ae-7f54-45ab-ba57-7afff97c93a2",
  "Description": "Grant read, write and modify permissions to folders or files",
  "Version": 5,
  "ActionType": "Octopus.Script",
  "Author": "mcfozzy",
  "Website": "https://library.octopus.com/step-templates/b77d55ae-7f54-45ab-ba57-7afff97c93a2",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/file-system-grant-permissions.json",
  "Category": "File System",
  "Properties": {
    "Octopus.Action.Script.ScriptBody": "$itemsParameter = $OctopusParameters['Items']\n$readPermissionsTo = $OctopusParameters['ReadPermissionsTo']\n$writePermissionsTo = $OctopusParameters['WritePermissionsTo']\n$modifyPermissionsTo = $OctopusParameters['ModifyPermissionsTo']\n\nif($readPermissionsTo)\n{\n    $readUsers = $readPermissionsTo.Split(\",\")\n}\n\nif($writePermissionsTo)\n{\n    $writeUsers = $writePermissionsTo.Split(\",\")\n}\n\nif($modifyPermissionsTo)\n{\n    $modifyUsers = $modifyPermissionsTo.Split(\",\")\n}\n\n$items = $itemsParameter.Split(\",\")\nforeach($item in $items) \n{\n    # Check path exists\n    if(!(Test-Path $item))\n    {\n        throw \"$item does not exist\"\n    }\n\n    Write-Host \"Path: $item\"\n    # Assign read permissions\n    foreach($user in $readUsers)\n    {\n        Write-Host \"  Adding read permissions for $user\"\n        $acl = (Get-Item $item).GetAccessControl('Access')\n        $acl.SetAccessRuleProtection($False, $False)\n        $rule = \n            if ($acl -is [System.Security.AccessControl.DirectorySecurity])\n                {\n                    New-Object System.Security.AccessControl.FileSystemAccessRule($user, \"Read\", \"ContainerInherit, ObjectInherit\", \"None\", \"Allow\")\n                }\n                else\n                {\n                    New-Object System.Security.AccessControl.FileSystemAccessRule($user, \"Read\", \"Allow\")\n                }\n        $acl.AddAccessRule($rule)\n        Set-Acl $item $acl\n    }\n\n    # Assign write permissions\n    foreach($user in $writeUsers)\n    {\n        Write-Host \"  Adding write permissions for $user\"\n        $acl = (Get-Item $item).GetAccessControl('Access')\n        $acl.SetAccessRuleProtection($False, $False)\n        $rule = \n            if ($acl -is [System.Security.AccessControl.DirectorySecurity])\n                {\n                    New-Object System.Security.AccessControl.FileSystemAccessRule($user, \"Write\", \"ContainerInherit, ObjectInherit\", \"None\", \"Allow\")\n                }\n                else\n                {\n                    New-Object System.Security.AccessControl.FileSystemAccessRule($user, \"Write\", \"Allow\")\n                }\n        $acl.AddAccessRule($rule)\n        Set-Acl $item $acl\n    }\n\n    # Assign modify permissions\n    foreach($user in $modifyUsers)\n    {\n        Write-Host \"  Adding modify permissions for $user\"\n        $acl = (Get-Item $item).GetAccessControl('Access')\n        $acl.SetAccessRuleProtection($False, $False)\n        $rule = \n            if ($acl -is [System.Security.AccessControl.DirectorySecurity])\n                {\n                    New-Object System.Security.AccessControl.FileSystemAccessRule($user, \"Modify\", \"ContainerInherit, ObjectInherit\", \"None\", \"Allow\")\n                }\n                else\n                {\n                    New-Object System.Security.AccessControl.FileSystemAccessRule($user, \"Modify\", \"Allow\")\n                }\n        $acl.AddAccessRule($rule)\n        Set-Acl $item $acl\n    }\n}\n\nWrite-Host \"Complete\"\n",
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.RunOnServer": "false",
    "Octopus.Action.Script.ScriptFileName": "",
    "Octopus.Action.Package.FeedId": "",
    "Octopus.Action.Package.PackageId": ""
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "Items",
      "Label": "Items",
      "HelpText": "A comma seperated list of full paths to the files or folders",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "ReadPermissionsTo",
      "Label": "Read Users",
      "HelpText": "A comma separated list of users to grant read permissions to",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "WritePermissionsTo",
      "Label": "Write Users",
      "HelpText": "A comma separated list of users to grant write permissions to",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "ModifyPermissionsTo",
      "Label": "Modify Users",
      "HelpText": "A comma separated list of users to grant modify permissions to",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-74-2018011412241463",
  "LogoAttachmentMimeType": "image/png"
}
{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-15",
  "Name": "AWS - Create Lambda",
  "ExternalId": "001609c0-35d0-4faa-95c3-a995faaeaa5e",
  "Description": "Creates a [AWS Lambda Function](#https://aws.amazon.com/lambda/) from the specified zip.\n\nIf the function exists, it will update the function code and update function configuration.\n- Requires the [AWS PowerShell cmdlets](http://aws.amazon.com/powershell/)\n\nTo create environment variables, add variables in project starting with 'env.'.\nFor example, to create environment variable S3BucketName = MyTestFolder, create variable 'env.S3BucketName' = 'MyTestFolder'.",
  "Version": 4,
  "ActionType": "Octopus.Script",
  "Author": "jasmin-mistry",
  "Website": "https://library.octopus.com/step-templates/001609c0-35d0-4faa-95c3-a995faaeaa5e",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/aws-lambda-create.json",
  "Category": "AWS",
  "Properties": {
    "Octopus.Action.Script.ScriptBody": "# Check for the PowerShell cmdlets (from AWS - Create Cloud Formation Stack Octopus Step).\ntry{ \n    Import-Module AWSPowerShell -ErrorAction Stop\n}catch{\n    \n    $modulePath = \"C:\\Program Files (x86)\\AWS Tools\\PowerShell\\AWSPowerShell\\AWSPowerShell.psd1\"\n    Write-Output \"Unable to find the AWS module checking $modulePath\" \n    \n    try{\n        Import-Module $modulePath        \n    }\n    catch{\n        throw \"AWS PowerShell not found! Please make sure to install them from https://aws.amazon.com/powershell/\" \n    }\n}\n\nfunction Get-EnvironmentVariables () {\n    $resultEV = @{}\n    $environmentVariableConst = 'env.'\n\n    $envVariables = $OctopusParameters.Keys | ? {$_ -like $environmentVariableConst + '*' }\n    \n    foreach($item in $envVariables)\n    {\n        $key = $item.Replace($environmentVariableConst, '')\n        $value = $OctopusParameters[$item]\n\n        $resultEV.Add($key, $value)\n    }\n    \n    return $resultEV\n}\n\n# Get the parameters.\n$functionName = $OctopusParameters['FunctionName']\n$functionZip = $OctopusParameters['FunctionZip']\n$handler = $OctopusParameters['Handler']\n$runtime = $OctopusParameters['Runtime']\n$role = $OctopusParameters['Role']\n$description = $OctopusParameters['Description']\n$memorySize = $OctopusParameters['MemorySize']\n$timeout = $OctopusParameters['Timeout']\n$awsRegion = $OctopusParameters['AWSRegion']\n$awsSecretAccessKey = $OctopusParameters['AWSSecretAccessKey']\n$awsAccessKey = $OctopusParameters['AWSAccessKey']\n$AWSCL_VpcConfig_SubnetId = $OctopusParameters['AWSCL_VpcConfig_SubnetId']\n$vpcSubnetIds = if($AWSCL_VpcConfig_SubnetId) { $AWSCL_VpcConfig_SubnetId.Split(',') }\n$AWSCL_VpcConfig_SecurityGroupId = $OctopusParameters['AWSCL_VpcConfig_SecurityGroupId']\nif($AWSCL_VpcConfig_SecurityGroupId) { $vpcSecurityGroupIds = $AWSCL_VpcConfig_SecurityGroupId.Split(',') }\n\n# Check the parameters.\nif (-NOT $awsSecretAccessKey) { throw \"You must enter a value for 'AWS Access Key'.\" }\nif (-NOT $awsAccessKey) { throw \"You must enter a value for 'AWS Secret Access Key'.\" }\nif (-NOT $awsRegion) { throw \"You must enter a value for 'AWS Region'.\" }\nif (-NOT $functionName) { throw \"You must enter a value for 'Function Name'.\" }\nif (-NOT $functionZip) { throw \"You must enter a value for 'Function Zip'.\" }\nif (-NOT $handler) { throw \"You must enter a value for 'Handler'.\" }\nif (-NOT $runtime) { throw \"You must enter a value for 'Runtime'.\" }\nif (-NOT $role) { throw \"You must enter a value for 'Role'.\" }\nif (-NOT $memorySize) { throw \"You must enter a value for 'Memory Size'.\" }\nif (-NOT $timeout) { throw \"You must enter a value for 'Timeout'.\" }\n\nWrite-Output \"--------------------------------------------------\"\nWrite-Output \"AWS Region: $awsRegion\"\nWrite-Output \"AWS Lambda Function Name: $functionName\"\nWrite-Output \"AWS Lambda Handler: $handler\"\nWrite-Output \"AWS Lambda Runtime: $runtime\"\nWrite-Output \"AWS Lambda Memory Size: $memorySize\"\nWrite-Output \"AWS Lambda Timeout: $timeout\"\nWrite-Output \"AWS Lambda Role: $role\"\nWrite-Output \"--------------------------------------------------\"\n\n# Set up the credentials and the dependencies.\nSet-DefaultAWSRegion -Region $awsRegion\n$credential = New-AWSCredentials -AccessKey $awsAccessKey -SecretKey $awsSecretAccessKey\n\n$awsEnvironmentVariables = Get-EnvironmentVariables\n\n# Check if the function exists, with a try catch\ntry {\n    Get-LMFunction -Credential $credential -FunctionName $functionName -Region $awsRegion\n    \n    Write-Host 'Updating Lambda function code.'\n\n    # Update the function.\n    Update-LMFunctionCode -Credential $credential -Region $awsRegion -FunctionName $functionName -ZipFilename  $functionZip\n    \n    Write-Host 'Updating Lambda function configuration.'\n\n    Update-LMFunctionConfiguration -Credential $credential -Region $awsRegion -FunctionName $functionName -Description $description -Handler $handler -MemorySize $memorySize -Role $role -Runtime $runtime -Timeout $timeout -Environment_Variable $awsEnvironmentVariables -VpcConfig_SecurityGroupId $vpcSecurityGroupIds -VpcConfig_SubnetId $vpcSubnetIds\n    \n    # Feedback\n    Write-Output \"--------------------------------------------------\"\n    Write-Output \"AWS Lambda Function updated.\"\n    Write-Output \"--------------------------------------------------\"\n}\ncatch {\n    # Create the function.\n    Publish-LMFunction -Credential $credential -Region $awsRegion -FunctionName $functionName -FunctionZip $functionZip -Handler $handler -Runtime $runtime -Role $role -Description $description -MemorySize $memorySize -Timeout $timeout -Environment_Variable $awsEnvironmentVariables -VpcConfig_SecurityGroupId $vpcSecurityGroupIds -VpcConfig_SubnetId $vpcSubnetIds\n\n    # Feedback\n    Write-Output \"--------------------------------------------------\"\n    Write-Output \"AWS Lambda Function created.\"\n    Write-Output \"--------------------------------------------------\"\n}\n",
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.RunOnServer": "false",
    "Octopus.Action.Script.ScriptFileName": "",
    "Octopus.Action.Package.FeedId": "",
    "Octopus.Action.Package.PackageId": ""
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "AWSSecretAccessKey",
      "Label": "AWS Secret Access Key",
      "HelpText": "The [secret access key](http://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys) to use when executing the script",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Sensitive"
      }
    },
    {
      "Id": null,
      "Name": "AWSAccessKey",
      "Label": "AWS Access Key",
      "HelpText": "The [access key](http://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys) to use when executing the script",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "AWSRegion",
      "Label": "AWS Region",
      "HelpText": "The Amazon Region see [https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/](https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/) for further info",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "FunctionName",
      "Label": "AWS Lambda Function Name",
      "HelpText": "The name of the AWS Lambda Function",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "FunctionZip",
      "Label": "AWS Lambda Function Zip Location",
      "HelpText": "The zip location of the AWS Lambda Function",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "Handler",
      "Label": "AWS Lambda Function Handler",
      "HelpText": "The handler signature (ASSEMBLY::TYPE::METHOD) of the AWS Lambda Function",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "Runtime",
      "Label": "AWS Lambda Function Runtime",
      "HelpText": "The runtime of the AWS Lambda Function",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Select",
        "Octopus.SelectOptions": "nodejs|nodejs\nnodejs4.3|nodejs4.3\njava8|java8\npython2.7|python2.7\ndotnetcore1.0|dotnetcore1.0\nnodejs4.3-edge|nodejs4.3-edge"
      }
    },
    {
      "Id": null,
      "Name": "Role",
      "Label": "AWS Lambda Function Role",
      "HelpText": "The role of the AWS Lambda Function, in [ARN](http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) format",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "Description",
      "Label": "AWS Lambda Function Description",
      "HelpText": "The description of the AWS Lambda Function",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "MultiLineText"
      }
    },
    {
      "Id": null,
      "Name": "MemorySize",
      "Label": "AWS Lambda Function Memory Size",
      "HelpText": "The memory size of the AWS Lambda Function. The default value is 128 MB. The value must be a multiple of 64 MB",
      "DefaultValue": "128",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "Timeout",
      "Label": "AWS Lambda Function Timeout",
      "HelpText": "The timeout of the AWS Lambda Function",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "AWSCL_VpcConfig_SubnetId",
      "Label": "AWS Lambda Function VPC Subnet Id",
      "HelpText": "A list of one or more subnet IDs in your VPC.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "AWSCL_VpcConfig_SecurityGroupId",
      "Label": "AWS Lambda Function VPC Security Group Id",
      "HelpText": "A list of one or more security groups IDs in your VPC.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-10-2018011412241421",
  "LogoAttachmentMimeType": "image/png"
}
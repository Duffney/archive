{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-80",
  "Name": "File System - Create Symlink",
  "ExternalId": "f0cae939-caef-4979-93ac-6c9b3a3c4986",
  "Description": "Creates a Symbolic Link",
  "Version": 23,
  "ActionType": "Octopus.Script",
  "Author": "diegoavanzini",
  "Website": "https://library.octopus.com/step-templates/f0cae939-caef-4979-93ac-6c9b3a3c4986",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/file-system-create-symlink.json",
  "Category": "File System",
  "Properties": {
    "Octopus.Action.Script.ScriptBody": "function New-Symlink {\n    <#\n    .SYNOPSIS\n        Creates a symbolic link.\n    #>\n    param (\n        [Parameter(Position=0, Mandatory=$true)]\n        [string] $Link,\n        [Parameter(Position=1, Mandatory=$true)]\n        [string] $Target\n    )\n\n    Write-Host \"New-Symlink $Link to $Target\"\n    \n    Invoke-MKLINK -Link $Link -Target $Target\n}\n\nfunction Invoke-MKLINK {\n    <#\n    .SYNOPSIS\n        Creates a symbolic link.\n    #>\n    param (\n        [Parameter(Position=0, Mandatory=$true)]\n        [string] $Link,\n        [Parameter(Position=1, Mandatory=$true)]\n        [string] $Target\n    )\n    \n    # Resolve the paths incase a relative path was passed in.\n    $Link = (Force-Resolve-Path $Link)\n    $Target = (Force-Resolve-Path $Target)\n\n    # Ensure target exists.\n    if (-not(Test-Path $Target)) {\n        throw \"Target does not exist.`nTarget: $Target\"\n    }\n\n    # Ensure link does not exist.\n    if (Test-Path $Link) {\n        Write-Host \"A file or directory already exists at the link path.`nLink: $Link\"\n        return\n    }\n\n    $isDirectory = (Get-Item $Target).PSIsContainer\n\n    # Capture the MKLINK output so we can return it properly.\n    # Includes a redirect of STDERR to STDOUT so we can capture it as well.\n    $output = cmd /c mklink /D `\"$Link`\" `\"$Target`\" 2>&1\n    \n    Write-Host \"output : $output\"\n    if ($lastExitCode -ne 0) {\n        Write-Host \"MKLINK failed. Exit code: $lastExitCode`n$output\"\n        throw \"MKLINK failed. Exit code: $lastExitCode`n$output\"\n    }\n    else {\n        Write-Output $output\n    }\n}\n\nfunction Force-Resolve-Path {\n    <#\n    .SYNOPSIS\n        Calls Resolve-Path but works for files that don't exist.\n    .REMARKS\n        From http://devhawk.net/2010/01/21/fixing-powershells-busted-resolve-path-cmdlet/\n    #>\n    param (\n        [string] $FileName\n    )\n    \n    $FileName = Resolve-Path $FileName -ErrorAction SilentlyContinue `\n                                       -ErrorVariable _frperror\n    if (-not($FileName)) {\n        $FileName = $_frperror[0].TargetObject\n    }\n    \n    return $FileName\n}\n\nNew-Symlink $link_path $target_path\n\n\n",
    "Octopus.Action.Script.Syntax": "PowerShell"
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "link_path",
      "Label": "LinkPath",
      "HelpText": null,
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "target_path",
      "Label": "TargetPath",
      "HelpText": null,
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-72-2018011412241462",
  "LogoAttachmentMimeType": "image/png"
}
{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-48",
  "Name": "Consolidate Release Notes",
  "ExternalId": "fa570d27-1405-4030-87b2-c0abf12bb833",
  "Description": "Consolidates all Release Notes between the last successful release in the current Environment and this one by merging or concatenating them.",
  "Version": 9,
  "ActionType": "Octopus.Script",
  "Author": "damovisa",
  "Website": "https://library.octopus.com/step-templates/fa570d27-1405-4030-87b2-c0abf12bb833",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/octopus-consolidate-releasenotes.json",
  "Category": "Octopus",
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.RunOnServer": "true",
    "Octopus.Action.Script.ScriptBody": "$baseUri = $OctopusParameters['Octopus.Web.BaseUrl']\n$reqheaders = @{\"X-Octopus-ApiKey\" = $Consolidate_ApiKey }\n$putReqHeaders = @{\"X-HTTP-Method-Override\" = \"PUT\"; \"X-Octopus-ApiKey\" = $Consolidate_ApiKey }\n\n$remWhiteSpace = [bool]::Parse($Consolidate_RemoveWhitespace)\n$deDupe = [bool]::Parse($Consolidate_Dedupe)\n$reverse = ($Consolidate_Order -eq \"Oldest\")\n\n# Get details we'll need\n$projectId = $OctopusParameters['Octopus.Project.Id']\n$thisReleaseNumber = $OctopusParameters['Octopus.Release.Number']\n$lastSuccessfulReleaseId = $OctopusParameters['Octopus.Release.CurrentForEnvironment.Id']\n$lastSuccessfulReleaseNumber = $OctopusParameters['Octopus.Release.CurrentForEnvironment.Number']\n\n# Get all previous releases to this environment\n$releaseUri = \"$baseUri/api/projects/$projectId/releases\"\ntry {\n    $allReleases = Invoke-WebRequest $releaseUri -Headers $reqheaders -UseBasicParsing | ConvertFrom-Json\n} catch {\n    if ($_.Exception.Response.StatusCode.Value__ -ne 404) {\n        $result = $_.Exception.Response.GetResponseStream()\n        $reader = New-Object System.Io.StreamReader($result);\n        $responseBody = $reader.ReadToEnd();\n        throw \"Error occurred: $responseBody\"\n    }\n}\n\n# Find and aggregate release notes\n$aggregateNotes = @()\n\nWrite-Host \"Finding all release notes between the last successful release: $lastSuccessfulReleaseNumber and this release: $thisReleaseNumber\"\nforeach ($rel in $allReleases.Items) {\n    if ($rel.Id -ne $lastSuccessfulReleaseId) {\n        Write-Host \"Found release notes for $($rel.Version)\"\n        $theseNotes = @()\n        #split into lines\n        $lines = $rel.ReleaseNotes -split \"`n\"\n        foreach ($line in $lines) {\n            if (-not $remWhitespace -or -not [string]::IsNullOrWhiteSpace($line)) {\n                if (-not $deDupe -or -not $aggregateNotes.Contains($line)) {\n                    $theseNotes = $theseNotes + $line\n                }\n            }\n        }\n        if ($reverse) {\n            $aggregateNotes = $theseNotes + $aggregateNotes\n        } else {\n            $aggregateNotes = $aggregateNotes + $theseNotes\n        }\n    } else {\n        break\n    }\n}\n$aggregateNotesText = $aggregateNotes -join \"`n`n\"\n\n# Get the current release\n$releaseUri = \"$baseUri/api/projects/$projectId/releases/$thisReleaseNumber\"\ntry {\n    $currentRelease = Invoke-WebRequest $releaseUri -Headers $reqheaders -UseBasicParsing | ConvertFrom-Json\n} catch {\n    if ($_.Exception.Response.StatusCode.Value__ -ne 404) {\n        $result = $_.Exception.Response.GetResponseStream()\n        $reader = New-Object System.Io.StreamReader($result);\n        $responseBody = $reader.ReadToEnd();\n        throw \"Error occurred: $responseBody\"\n    }\n}\n\n# Update the release notes for the current release\n$currentRelease.ReleaseNotes = $aggregateNotesText\nWrite-Host \"Updating release notes for $thisReleaseNumber`:`n`n\"\nWrite-Host $aggregateNotesText\ntry {\n    $releaseUri = \"$baseUri/api/releases/$($currentRelease.Id)\"\n    $currentReleaseBody = $currentRelease | ConvertTo-Json\n    $result = Invoke-WebRequest $releaseUri -Method Post -Headers $putReqHeaders -Body $currentReleaseBody -UseBasicParsing | ConvertFrom-Json\n} catch {\n    $result = $_.Exception.Response.GetResponseStream()\n    $reader = New-Object System.Io.StreamReader($result);\n    $responseBody = $reader.ReadToEnd();\n    Write-Host $responseBody\n    throw \"Error occurred: $responseBody\"\n}",
    "Octopus.Action.Script.ScriptFileName": "",
    "Octopus.Action.Package.FeedId": "",
    "Octopus.Action.Package.PackageId": ""
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "Consolidate_ApiKey",
      "Label": "Api Key",
      "HelpText": "The API Key to use for authentication",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Sensitive"
      }
    },
    {
      "Id": null,
      "Name": "Consolidate_Dedupe",
      "Label": "Remove Duplicates",
      "HelpText": "Whether to remove **duplicate** lines when constructing release notes",
      "DefaultValue": "True",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox",
        "Octopus.SelectOptions": "Yes|Yes\nNo|No"
      }
    },
    {
      "Id": null,
      "Name": "Consolidate_RemoveWhitespace",
      "Label": "Remove Blank Lines",
      "HelpText": "Whether to remove **blank** lines when constructing release notes",
      "DefaultValue": "True",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox",
        "Octopus.SelectOptions": "Yes|Yes\nNo|No"
      }
    },
    {
      "Id": null,
      "Name": "Consolidate_Order",
      "Label": "Concatenation Order",
      "HelpText": "The order in which to append release notes",
      "DefaultValue": "Newest",
      "DisplaySettings": {
        "Octopus.ControlType": "Select",
        "Octopus.SelectOptions": "Newest|Newest to Oldest\nOldest|Oldest to Newest"
      }
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-42-2018011412241441",
  "LogoAttachmentMimeType": "image/png"
}
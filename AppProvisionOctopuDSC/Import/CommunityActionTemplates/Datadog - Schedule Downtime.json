{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-55",
  "Name": "Datadog - Schedule Downtime",
  "ExternalId": "4db094ce-9c74-499d-8129-ce973cdaa9d4",
  "Description": "Datadog is cloud monitoring service which allows you to push arbitrary events into via an api. This task allows you to schedule a downtime event to prevent error alerts during a deployment.",
  "Version": 3,
  "ActionType": "Octopus.Script",
  "Author": "ryankelley",
  "Website": "https://library.octopus.com/step-templates/4db094ce-9c74-499d-8129-ce973cdaa9d4",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/datadog-schedule-downtime.json",
  "Category": "Datadog",
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptBody": "# Lets handle our own errors here\n$ErrorActionPreference = \"continue\"\n\n$apiKey = $OctopusParameters['ApiKey']\n$appKey = $OctopusParameters['AppKey']\n$endpoint = $OctopusParameters['DatadogEndpoint']\n$downtimeApiEndpoint = \"/api/v1/downtime\"\n$scope = $OctopusParameters['Environment']\n$durstring = $OctopusParameters['Duration']\n\n[int]$duration = [convert]::ToInt32($durstring,10)\n\n# Write out some debug information\nWrite-Host \"Scheduling Downtime for: $scope\"\nWrite-Host \"Datadog Endpoint: $endpoint$downtimeApiEndpoint\"\n\n# Create the url from basic information\n$url = \"$endpoint$downtimeApiEndpoint`?api_key=$apiKey&application_key=$appKey\"\n\nWrite-Host $url\n\n$start=[Math]::Floor([decimal](Get-Date(Get-Date).ToUniversalTime()-uformat \"%s\"))\n$end = $start + $duration\n$json = @\"\n{\n      \"scope\": \"env:$scope\",\n      \"start\": \"$start\",\n      \"end\": \"$end\"\n  }\n\"@\n\n# Make the response and handle exceptions **Requires PS 3.0 + \ntry {\n    $response = Invoke-WebRequest -Uri $url -Method POST -Body ($json | ConvertFrom-Json | ConvertTo-Json) -ContentType \"Application/json\"\n}catch{\n    Write-Error \"Error: $_\"\n    EXIT 0\n}\n\n# Some Error handling here\nif($response.StatusCode -ne 200){\n    Write-Error \"There was an error listing response content below to debug\"\n    $response.RawContent\n}else{\n    Write-Host \"Sent Successfully\"\n}\n\n# We usually don't want to fail a deployment because of this\nEXIT 0"
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "ApiKey",
      "Label": "Datadog Api Key",
      "HelpText": "The api key used to authenticate with Datadog",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "AppKey",
      "Label": "Datadog Application Key",
      "HelpText": "The Application key used to authenticate with Datadog",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "DatadogEndpoint",
      "Label": "Datadog Endpoint",
      "HelpText": "The endpoint for datadog, for most (if not all) instances this should just be \"https://app.datadoghq.com\"",
      "DefaultValue": "https://app.datadoghq.com",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "Environment",
      "Label": "Environment",
      "HelpText": "Environment tag in Datadog to schedule the downtime for",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "Duration",
      "Label": "Downtime Duration (seconds)",
      "HelpText": "How long should the downtime be scheduled for, in seconds default is 10 minutes",
      "DefaultValue": "600",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-47-2018011412241444",
  "LogoAttachmentMimeType": "image/png"
}
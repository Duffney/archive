{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-226",
  "Name": "StatusPage.io - Update Scheduled Maintenance Incident",
  "ExternalId": "7bc83a07-8927-467e-a2eb-922609212e3a",
  "Description": "Updates an existing scheduled maintenance incident on StatusPage.io",
  "Version": 0,
  "ActionType": "Octopus.Script",
  "Author": "nshenoy",
  "Website": "https://library.octopus.com/step-templates/7bc83a07-8927-467e-a2eb-922609212e3a",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/statuspageio-update-scheduled-maintenance-incident.json",
  "Category": "StatusPage",
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.RunOnServer": "false",
    "Octopus.Action.Script.ScriptBody": "## --------------------------------------------------------------------------------------\n## Input\n## --------------------------------------------------------------------------------------\n$pageId = $OctopusParameters['PageId']\n$apiKey = $OctopusParameters['ApiKey']\n$incidentName = $OctopusParameters['IncidentName']\n$incidentStatus = $OctopusParameters['IncidentStatus']\n$incidentMessage = $OctopusParameters['IncidentMessage']\n\nfunction Validate-Parameter($parameterValue, $parameterName) {\n    if(!$parameterName -contains \"Key\") {\n        Write-Host \"${parameterName}: ${parameterValue}\"\n    }\n\n    if (! $parameterValue) {\n        throw \"$parameterName cannot be empty, please specify a value\"\n    }\n}\n\nfunction Get-InProgressScheduledIncidentByName\n{\n    [CmdletBinding()]\n    Param(\n        [Parameter(Mandatory=$true)]\n        [string]$PageId,\n\n        [Parameter(Mandatory=$true)]\n        [string]$ApiKey,\n\n        [Parameter(Mandatory=$true)]\n        [string]$Name\n    )\n\n    $url = \"https://api.statuspage.io/v1/pages/$PageId/incidents/unresolved.json\"\n    $headers = @{\"Authorization\"=\"OAuth $ApiKey\"}\n\n    $response = iwr -UseBasicParsing -Uri $url -Headers $headers -Method GET\n    $content = ConvertFrom-Json $response\n    $incident = $content | where {$_.name -eq $Name}\n    $incident.id\n}\n\nfunction Update-ScheduledIncident\n{\n    [CmdletBinding()]\n    Param(\n        [Parameter(Mandatory=$true)]\n        [string]$PageId,\n\n        [Parameter(Mandatory=$true)]\n        [string]$ApiKey,\n\n        [Parameter(Mandatory=$true)]\n        [string]$IncidentId,\n\n        [Parameter(Mandatory=$true)]\n        [ValidateSet(\"scheduled\", \"in_progress\", \"verifying\", \"completed\")]\n        [string]$Status,\n        \n        [Parameter(Mandatory=$false)]\n        [string]$Message\n    )\n\n    $url = \"https://api.statuspage.io/v1/pages/$PageId/incidents/$IncidentId.json\"\n    $headers = @{\"Authorization\"=\"OAuth $ApiKey\"}\n    $body = \"incident[status]=$Status\"\n\n    if($Message)\n    {\n        $body += \"&incident[message]=$Message\"\n    }\n\n    $response = iwr -UseBasicParsing -Uri $url -Headers $headers -Method PATCH -Body $body -ContentType application/x-www-form-urlencoded\n}\n\nValidate-Parameter $pageId -parameterName 'PageId'\nValidate-Parameter $apiKey = -parameterName 'ApiKey'\nValidate-Parameter $incidentName = -parameterName 'IncidentName'\nValidate-Parameter $incidentStatus -parameterName 'IncidentStatus'\n\n$incidentId = Get-InProgressScheduledIncidentByName -PageId $pageId -ApiKey $apiKey -Name $incidentName\nWrite-Verbose \"Found incident id: $incidentId\"\nWrite-Output \"Updating scheduled maintenance incident `\"$incidentName`\" [IncidentId: $incidentId]\"\nUpdate-ScheduledIncident -PageId $pageId -ApiKey $apiKey -IncidentId $incidentId -Status $incidentStatus -Message $incidentMessage \n",
    "Octopus.Action.Script.ScriptFileName": "",
    "Octopus.Action.Package.FeedId": "",
    "Octopus.Action.Package.PackageId": ""
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "IncidentName",
      "Label": "Scheduled Maintenance Name",
      "HelpText": "The name of the scheduled maintenance incident.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "IncidentStatus",
      "Label": "Status",
      "HelpText": "The status of the incident, one of scheduled|in_progress|verifying|completed",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Select",
        "Octopus.SelectOptions": "scheduled|Scheduled\nin_progress|In Progress\nverifying|Verifying\ncompleted|Completed"
      }
    },
    {
      "Id": null,
      "Name": "IncidentMessage",
      "Label": "Message",
      "HelpText": "Optional message to add to scheduled maintenance incident.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "PageId",
      "Label": "StatusPage.io Page Id",
      "HelpText": "StatusPage.io Organization or \"Page ID\". Visit the [API authentication docs](http://doers.statuspage.io/api/authentication/) for details.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "ApiKey",
      "Label": "StatusPage.io API Key",
      "HelpText": "StatusPage.io API key for the organization. Visit the [API Authentication docs](http://doers.statuspage.io/api/authentication/) for details.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Sensitive"
      }
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-216-2018011412241613",
  "LogoAttachmentMimeType": "image/png"
}
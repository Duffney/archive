{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-202",
  "Name": "Solarwinds - Manage",
  "ExternalId": "4e870b0d-0715-4b98-9fa3-48500f6a42e4",
  "Description": "Start monitoring for a Solarwinds node, application or both",
  "Version": 1,
  "ActionType": "Octopus.Script",
  "Author": "sportingsolutions",
  "Website": "https://library.octopus.com/step-templates/4e870b0d-0715-4b98-9fa3-48500f6a42e4",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/solarwinds-manage.json",
  "Category": "SolarWinds",
  "Properties": {
    "Octopus.Action.Script.ScriptBody": "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = {$true}\n\n$solarwindsHost =  $OctopusParameters['Host']\n$node =  $OctopusParameters['NodeId']\n$application =  $OctopusParameters['ApplicationId']\n$username =  $OctopusParameters['Username']\n$password =  $OctopusParameters['Password']\n\nWrite-Host \"Starting Solarwinds monitoring for node \" + $node\n\nif ($node -ne \"\")\n{\n    $success = $false\n    try\n    {\n        $body = \"[\"\"$node\"\"]\"\n        $header = @{}\n        $header.Add(\"Authorization\", \"Basic \"+[System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($username+\":\"+$password)))\n        $uri = \"https://\" + $solarwindsHost + \":17778/SolarWinds/InformationService/v3/Json/Invoke/Orion.Nodes/Remanage\"\n\n        Write-Host \"Sending request $body to $uri\"\n\n        $response = Invoke-WebRequest -Uri $uri -Method Post -Body $body -Headers $header -ContentType \"application/json\" -UseBasicParsing\n\n        if ($response.StatusCode -eq 200)\n        {\n            $success = $true\n        }\n    }\n    catch\n    {\n        Write-Host \"Something went wrong:\"\n        Write-Host $_.Exception\n    }\n\n    if (!$success)\n    {\n        throw \"Remanaging node failed.\"\n    }\n\n    Write-Host \"Remanaged node $node.\"\n}\n\nif ($application -ne \"\")\n{\n    $success = $false\n    try\n    {\n        $body = \"[\"\"$application\"\"]\"\n        $header = @{}\n        $header.Add(\"Authorization\", \"Basic \"+[System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($username+\":\"+$password)))\n        $uri = \"https://\" + $solarwindsHost + \":17778/SolarWinds/InformationService/v3/Json/Invoke/Orion.APM.Application/Remanage\"\n\n        Write-Host \"Sending request $body to $uri\"\n\n        $response = Invoke-WebRequest -Uri $uri -Method Post -Body $body -Headers $header -ContentType \"application/json\" -UseBasicParsing\n\n        if ($response.StatusCode -eq 200)\n        {\n            $success = $true\n        }\n    }\n    catch\n    {\n        Write-Host \"Something went wrong:\"\n        Write-Host $_.Exception\n    }\n\n    if (!$success)\n    {\n        throw \"Remanaging application failed.\"\n    }\n\n    Write-Host \"Remanaged application $application.\"\n}",
    "Octopus.Action.Script.Syntax": "PowerShell"
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "Host",
      "Label": "Host",
      "HelpText": "IP or DNS of the Solarwinds monitoring server",
      "DefaultValue": "",
      "DisplaySettings": {}
    },
    {
      "Id": null,
      "Name": "NodeId",
      "Label": "Node ID",
      "HelpText": "Solarwinds ID of machine to be unmonitored. Starts with 'N:'.",
      "DefaultValue": "",
      "DisplaySettings": {}
    },
    {
      "Id": null,
      "Name": "ApplicationId",
      "Label": "Application ID",
      "HelpText": "Solarwinds ID of application to be unmonitored. Starts with 'AA:'.",
      "DefaultValue": "",
      "DisplaySettings": {}
    },
    {
      "Id": null,
      "Name": "Username",
      "Label": "Username",
      "HelpText": "Username for the Solarwinds console user",
      "DefaultValue": "",
      "DisplaySettings": {}
    },
    {
      "Id": null,
      "Name": "Password",
      "Label": "Password",
      "HelpText": "Password for the Solarwinds console user",
      "DefaultValue": "",
      "DisplaySettings": {}
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-193-2018011412241598",
  "LogoAttachmentMimeType": "image/png"
}
{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-86",
  "Name": "File System - Zip Directory Contents",
  "ExternalId": "fa148b10-99e2-47be-b19f-a16dee1c8f27",
  "Description": "Creates a zip archive that contains the files and directories from the specified directory, uses the specified compression level, and optionally includes the base directory.\n\nRequires .NET 4.5 as it relies on the `System.IO.Compression.ZipFile` class.",
  "Version": 12,
  "ActionType": "Octopus.Script",
  "Author": "curiousdev",
  "Website": "https://library.octopus.com/step-templates/fa148b10-99e2-47be-b19f-a16dee1c8f27",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/file-system-zip-directory-contents.json",
  "Category": "File System",
  "Properties": {
    "Octopus.Action.Script.ScriptBody": "$SourceDirectoryName = $OctopusParameters['SourceDirectoryName']\n$DestinationArchiveFileName = $OctopusParameters['DestinationArchiveFileName']\n$CompressionLevel = $OctopusParameters['CompressionLevel']\n$IncludeBaseDirectory = $OctopusParameters['IncludeBaseDirectory']\n$OverwriteDestination = $OctopusParameters['OverwriteDestination']\n\nif (!$SourceDirectoryName)\n{\n    Write-Error \"No Source Directory name was specified. Please specify the name of the directory to that will be zipped.\"\n    exit -2\n}\n\nif (!$DestinationArchiveFileName)\n{\n    Write-Error \"No Destination Archive File name was specified. Please specify the name of the zip file to be created.\"\n    exit -2\n}\n\nif (($OverwriteDestination) -and (Test-Path $DestinationArchiveFileName))\n{\n    Write-Host \"$DestinationArchiveFileName already exists. Will delete it before we create a new zip file with the same name.\"\n    Remove-Item $DestinationArchiveFileName\n}\n\nWrite-Host \"Creating Zip file $DestinationArchiveFileName with the contents of directory $SourceDirectoryName using compression level $CompressionLevel\"\n\n$assembly = [Reflection.Assembly]::LoadWithPartialName(\"System.IO.Compression.FileSystem\")\n[System.IO.Compression.ZipFile]::CreateFromDirectory($SourceDirectoryName, $DestinationArchiveFileName, $CompressionLevel, $IncludeBaseDirectory)\n",
    "Octopus.Action.Script.Syntax": "PowerShell"
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "SourceDirectoryName",
      "Label": "Source Directory",
      "HelpText": "The path to the directory to be archived, specified as a relative or absolute path.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "DestinationArchiveFileName",
      "Label": "Destination Archive File",
      "HelpText": "The path of the archive to be created, specified as a relative or absolute path.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "CompressionLevel",
      "Label": "Compression Level",
      "HelpText": "Indicates whether to emphasize speed or compression effectiveness when creating the entry.",
      "DefaultValue": "Optimal",
      "DisplaySettings": {
        "Octopus.ControlType": "Select",
        "Octopus.SelectOptions": "Optimal|Optimal\nFastest|Fastest\nNoCompression|No Compression"
      }
    },
    {
      "Id": null,
      "Name": "IncludeBaseDirectory",
      "Label": "Include Base Directory",
      "HelpText": "Include the directory name from Source Directory at the root of the archive.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "OverwriteDestination",
      "Label": "Overwrite Destination If Exists",
      "HelpText": "Overwrite the destination archive file if it already exists.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-78-2018011412241466",
  "LogoAttachmentMimeType": "image/png"
}
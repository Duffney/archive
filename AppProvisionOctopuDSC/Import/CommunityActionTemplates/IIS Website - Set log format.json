{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-130",
  "Name": "IIS Website - Set log format",
  "ExternalId": "e46aad55-5484-48a7-a90d-970d40129893",
  "Description": "Sets fields included in IIS logging. Uses named checkboxes where the names are identical to the naming scheme in IIS Manager.",
  "Version": 14,
  "ActionType": "Octopus.Script",
  "Author": "arnodenuijl",
  "Website": "https://library.octopus.com/step-templates/e46aad55-5484-48a7-a90d-970d40129893",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/iis-website-set-log-format.json",
  "Category": "IIS",
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.Script.ScriptBody": "Import-Module \"WebAdministration\" -ErrorAction Stop\n\nfunction SetIisLogPath {\n    param($logPath, $IISsitename)\n    write-host \"#Updating IIS Log path\"\n    \n    if (!(Test-Path \"IIS:\\Sites\\$($IISsitename)\")) {\n        write-host \"$IISsitename does not exist in IIS\"\n    } else {\n        Set-ItemProperty IIS:\\Sites\\$($IISsitename) -name logFile.directory -value $logPath\n        write-host \"IIS LogPath updated to $logPath\"\n    }\n}\n\nfunction AdvancedLogging-GenerateAppCmdScriptToConfigureAndRun\n{\n    param([string] $site) \n\n    #Clear existing log definition if it exists. We use site name to make it apparent where it belongs.\n    clear-WebConfiguration -PSPath IIS:\\ -Filter \"system.webServer/advancedLogging/server/logDefinitions/logDefinition[@baseFileName='$site']\"\n\n    #Get current powershell execution folder\n    $currentLocation = Get-Location\n\n    #Create an empty bat which will be populated with appcmd instructions\n    $stream = [System.IO.StreamWriter] \"$currentLocation\\$site.bat\"\n\n    $stream.WriteLine(\"%systemroot%\\system32\\inetsrv\\appcmd.exe clear config \"\"$site\"\" -section:system.webServer/advancedLogging/server /commit:apphost\")\n\n    #Create site specific log definition\n    $stream.WriteLine(\"%systemroot%\\system32\\inetsrv\\appcmd.exe set config \"\"$site\"\" -section:system.webServer/advancedLogging/server /+`\"logDefinitions.[baseFileName='$site',enabled='True',logRollOption='Schedule',schedule='Daily',publishLogEvent='False']`\" /commit:apphost\")\n\n    #Get all available fields for logging\n    $availableFields = Get-WebConfiguration \"system.webServer/advancedLogging/server/fields\"\n\n    $targetFields = ((GetIisLogFields).iisHeader)\n    Write-Host \"Target fields: \" (($targetFields) -join ',')\n    #Add appcmd instruction to add all the selected fields above to be logged as part of the logging\n    #The below section can be extended to filter out any unwanted fields\n    foreach ($field in $targetFields) {\n    \t$f = (($availableFields.Collection) |Where-Object {$_.logHeaderName -eq \"$field\"})\n    \tWrite-Host \"Appending \" $f.iisHeader $f.id\n        $stream.WriteLine(\"C:\\windows\\system32\\inetsrv\\appcmd.exe set config \"\"$site\"\" -section:system.webServer/advancedLogging/server /+`\"logDefinitions.[baseFileName='$site'].selectedFields.[id='$($f.id)',logHeaderName='$($f.logHeaderName)']`\" /commit:apphost\")\n    }\n\n    $stream.close()\n\n    # execute the batch file create to configure the site specific Advanced Logging\n    Start-Process -FilePath $currentLocation\\$site.bat\n    Start-Sleep -Seconds 10\n}\n\nfunction GetIisLogFields {\n    $IisLogFields = @()\n    if ($OctopusParameters['Date'] -eq \"True\") \t\t    { $IisLogFields += New-Object PSObject -Property @{id = \"Date\"; iisHeader = \"date\" } }\n    if ($OctopusParameters['Time'] -eq \"True\") \t\t    { $IisLogFields += New-Object PSObject -Property @{id = \"Time\"; iisHeader = \"time\" } }\n    if ($OctopusParameters['ClientIP'] -eq \"True\")      \t{ $IisLogFields += New-Object PSObject -Property @{id = \"ClientIP\"; iisHeader = \"c-ip\"} }\n    if ($OctopusParameters['UserName'] -eq \"True\")     \t{ $IisLogFields += New-Object PSObject -Property @{id = \"UserName\"; iisHeader = \"cs-username\" } }\n    if ($OctopusParameters['SiteName'] -eq \"True\") \t    { $IisLogFields += New-Object PSObject -Property @{id = \"SiteName\"; iisHeader = \"s-sitename\" } }\n    if ($OctopusParameters['ComputerName'] -eq \"True\")     { $IisLogFields += New-Object PSObject -Property @{id = \"ComputerName\"; iisHeader = \"s-computername\" } }\n    if ($OctopusParameters['ServerIP'] -eq \"True\") \t    { $IisLogFields += New-Object PSObject -Property @{id = \"ServerIP\"; iisHeader = \"s-ip\" } }\n    if ($OctopusParameters['ServerPort'] -eq \"True\") \t    { $IisLogFields += New-Object PSObject -Property @{id = \"ServerPort\"; iisHeader = \"s-port\" } }\n    if ($OctopusParameters['Method'] -eq \"True\")    \t\t{ $IisLogFields += New-Object PSObject -Property @{id = \"Method\"; iisHeader = \"cs-method\" } }\n    if ($OctopusParameters['UriStem'] -eq \"True\") \t    \t{ $IisLogFields += New-Object PSObject -Property @{id = \"UriStem\"; iisHeader = \"cs-uri-stem\" } }\n    if ($OctopusParameters['UriQuery'] -eq \"True\") \t    { $IisLogFields += New-Object PSObject -Property @{id = \"UriQuery\"; iisHeader = \"cs-uri-query\" } }\n    if ($OctopusParameters['HttpStatus'] -eq \"True\") \t    { $IisLogFields += New-Object PSObject -Property @{id = \"HttpStatus\"; iisHeader = \"sc-status\" } }\n    if ($OctopusParameters['HttpSubStatus'] -eq \"True\") \t{ $IisLogFields += New-Object PSObject -Property @{id = \"HttpSubStatus\"; iisHeader = \"sc-substatus\" } }\n    if ($OctopusParameters['Win32Status'] -eq \"True\") \t    { $IisLogFields += New-Object PSObject -Property @{id = \"Win32Status\"; iisHeader = \"sc-win32-status\" } }\n    if ($OctopusParameters['BytesSent'] -eq \"True\") \t    { $IisLogFields += New-Object PSObject -Property @{id = \"BytesSent\"; iisHeader = \"sc-bytes\" } }\n    if ($OctopusParameters['BytesRecv'] -eq \"True\") \t    { $IisLogFields += New-Object PSObject -Property @{id = \"BytesRecv\"; iisHeader = \"cs-bytes\" } }\n    if ($OctopusParameters['TimeTaken'] -eq \"True\")     \t{ $IisLogFields += New-Object PSObject -Property @{id = \"TimeTaken\"; iisHeader = \"TimeTakenMS\" } }\n    if ($OctopusParameters['ProtocolVersion'] -eq \"True\") \t{ $IisLogFields += New-Object PSObject -Property @{id = \"ProtocolVersion\"; iisHeader = \"cs-version\" } }\n    if ($OctopusParameters['Host'] -eq \"True\") \t\t    { $IisLogFields += New-Object PSObject -Property @{id = \"Host\"; iisHeader = \"cs(Host)\" } }\n    if ($OctopusParameters['UserAgent'] -eq \"True\") \t    { $IisLogFields += New-Object PSObject -Property @{id = \"UserAgent\"; iisHeader = \"cs(User-Agent)\" } }\n    if ($OctopusParameters['Cookie'] -eq \"True\")    \t\t{ $IisLogFields += New-Object PSObject -Property @{id = \"Cookie\"; iisHeader = \"cs(Cookie)\" } }\n    if ($OctopusParameters['Referer'] -eq \"True\") \t\t    { $IisLogFields += New-Object PSObject -Property @{id = \"Referer\"; iisHeader = \"cs(Referer)\" } }\n    if ($OctopusParameters['OriginalIP'] -eq \"True\") \t    { $IisLogFields += New-Object PSObject -Property @{id = \"OriginalIP\"; iisHeader = \"x-forwarded-for\" } }\n    return $IisLogFields    \n}\n\nfunction SetForIISAboveV7 {\n    param($SiteName)\n    [System.Collections.ArrayList]$logFields = ((GetIisLogFields).id)\n    $filter = \"/system.applicationHost/sites/site[@Name=\"\"$SiteName\"\"]/logFile\"\n    write-host \"Filter: $filter\"\n    \n    #Clear all existing custom fields...\n    clear-WebConfiguration -PSPath IIS:\\ -Filter \"$filter/customFields\"\n    \n    if ($logFields.Contains(\"OriginalIP\")) { \n      add-WebConfiguration -PSPath IIS:\\ -Filter \"$filter/customFields\" -Value @{logFieldName='OriginalIP';sourceType='RequestHeader';sourceName='X-FORWARDED-FOR'}\n    }\n    \n    Write-Host (($logFields) -join ',')\n    # This is part of extended logging and cannot be set using the syntax below.\n    $logFields.Remove(\"OriginalIP\")\n    Set-WebConfigurationProperty -Filter $filter -Value (($logFields) -join ',') -Name \"LogExtFileFlags\"\n}\n\nfunction SetForIISV7 {\n    param($site, $logDirectory)\n    Write-Host 'Disables http logging module'\n    Set-WebConfigurationProperty -Filter system.webServer/httpLogging -PSPath machine/webroot/apphost -Name dontlog -Value true\n    Write-Host 'Adding X-Forwarded-For as OriginalIP to advanced logging'\n    if (Get-WebConfigurationProperty \"system.webServer/advancedLogging/server/fields\" -Name Collection |Where-Object {$_.id -eq \"OriginalID\"}) {\n\twrite-host \"OriginalID field already exists. Will not modify existing definition.\"\n    } else {\n        Add-WebConfiguration \"system.webServer/advancedLogging/server/fields\" -value @{id=\"OriginalID\";sourceName=\"X-Forwarded-For\";sourceType=\"RequestHeader\";logHeaderName=\"X-Forwarded-For\";category=\"Default\";loggingDataType=\"TypeLPCSTR\"}\n    }\n    # Disables the default advanced logging config\n    Set-WebConfigurationProperty -Filter \"system.webServer/advancedLogging/server/logDefinitions/logDefinition[@baseFileName='%COMPUTERNAME%-Server']\" -name enabled -value false\n    # Enable Advanced Logging\n    Set-WebConfigurationProperty -Filter system.webServer/advancedLogging/server -PSPath machine/webroot/apphost -Name enabled -Value true\n    \n    # Set log directory at server level\n    Set-WebConfigurationProperty -Filter system.applicationHost/advancedLogging/serverLogs -PSPath machine/webroot/apphost -Name directory -Value $logDirectory\n    \n    # Set log directory at site default level\n    Set-WebConfigurationProperty -Filter system.applicationHost/sites/siteDefaults/advancedLogging -PSPath machine/webroot/apphost -Name directory -Value $logDirectory\t\n\n    AdvancedLogging-GenerateAppCmdScriptToConfigureAndRun $site\t\n}\n\nWrite-Host \"Value of UriQuery parameter \" $OctopusParameters['UriQuery']\n$logPath = $OctopusParameters['IISLogPath']\n$IISsitename = $OctopusParameters['webSiteName']\n$iisMajorVersion = (get-itemproperty HKLM:\\SOFTWARE\\Microsoft\\InetStp\\ |select MajorVersion).MajorVersion\nif ($iisMajorVersion -gt 7) {\n  SetForIISAboveV7 $OctopusParameters['SiteName'] \n  SetIisLogPath $OctopusParameters['iisLogDirectory'] $OctopusParameters['SiteName']\n} elseif ($iisMajorVersion -lt 7) {\n   Write-Host 'Cannot handle IIS versions below 7. Found IIS version ' $iisMajorVersion\n   exit 1\n} else {\n    SetForIISV7 $OctopusParameters['SiteName'] $OctopusParameters['iisLogDirectory']\n}\n\n",
    "Octopus.Action.RunOnServer": "false",
    "Octopus.Action.Script.ScriptFileName": "",
    "Octopus.Action.Package.FeedId": "",
    "Octopus.Action.Package.PackageId": ""
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "SiteName",
      "Label": "SiteName",
      "HelpText": null,
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "iisLogDirectory",
      "Label": "Where should the logs be placed?",
      "HelpText": "",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "Date",
      "Label": "Date (date)",
      "HelpText": "",
      "DefaultValue": "True",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "Time",
      "Label": "Time (time)",
      "HelpText": "",
      "DefaultValue": "True",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "ClientIP",
      "Label": "ClientIP IP Address (c-ip)",
      "HelpText": "",
      "DefaultValue": "True",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "UserName",
      "Label": "User Name (cs-username)",
      "HelpText": "",
      "DefaultValue": "True",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "ServiceName",
      "Label": "Service Name (s-sitename)",
      "HelpText": "",
      "DefaultValue": "False",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "ComputerName",
      "Label": "ServerName (s-computername)",
      "HelpText": null,
      "DefaultValue": "False",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "ServerIP",
      "Label": "Server IP Address (s-ip)",
      "HelpText": "",
      "DefaultValue": "False",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "Method",
      "Label": "Method (cs-method)",
      "HelpText": "",
      "DefaultValue": "True",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "UriStem",
      "Label": "UriStem (cs-uri-stem)",
      "HelpText": null,
      "DefaultValue": "True",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "UriQuery",
      "Label": "Uri query (cs-uri-query)",
      "HelpText": null,
      "DefaultValue": "True",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "HttpStatus",
      "Label": "Protocol Status (sc-status)",
      "HelpText": "",
      "DefaultValue": "True",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "Win32Status",
      "Label": "Win32 Status (sc-win32-status)",
      "HelpText": null,
      "DefaultValue": "False",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "HttpSubStatus",
      "Label": "Protocol Substatus (sc-substatus)",
      "HelpText": "",
      "DefaultValue": "True",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "BytesSent",
      "Label": "Bytes sent (sc-bytes)",
      "HelpText": "",
      "DefaultValue": "False",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "BytesRecv",
      "Label": "Bytes received (cs-bytes)",
      "HelpText": null,
      "DefaultValue": "False",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "TimeTaken",
      "Label": "Time taken (time-taken)",
      "HelpText": "",
      "DefaultValue": "True",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "ProtocolVersion",
      "Label": "Protocol version (cs-version)",
      "HelpText": null,
      "DefaultValue": "True",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "Host",
      "Label": "Host (cs-host)",
      "HelpText": "",
      "DefaultValue": "True",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "UserAgent",
      "Label": "User agent (cs(UserAgent))",
      "HelpText": null,
      "DefaultValue": "true",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "Cookie",
      "Label": "Cookie (cs(Cookie))",
      "HelpText": "",
      "DefaultValue": "False",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "Referer",
      "Label": "Referer (cs(Referer))",
      "HelpText": null,
      "DefaultValue": "False",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "ServerPort",
      "Label": "Server Port (s-port)",
      "HelpText": "",
      "DefaultValue": "True",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "OriginalIP",
      "Label": "Original IP",
      "HelpText": "From X-FORWARDED-FOR in request.",
      "DefaultValue": "True",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-122-2018011412241520",
  "LogoAttachmentMimeType": "image/png"
}
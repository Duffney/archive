{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-43",
  "Name": "Com Component - Register and Unregister using Regsvr32.exe",
  "ExternalId": "cf8634b6-313f-4435-bae6-88520c58d81d",
  "Description": "Uses regsvr32.exe to register com components",
  "Version": 2,
  "ActionType": "Octopus.Script",
  "Author": "jbennett",
  "Website": "https://library.octopus.com/step-templates/cf8634b6-313f-4435-bae6-88520c58d81d",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/com-component-register-unregister.json",
  "Category": "Windows",
  "Properties": {
    "Octopus.Action.Script.ScriptBody": "# Running outside octopus\nparam(\n    [string]$DllFilePaths,\n    [string]$Uninstall\n)\n\n$ErrorActionPreference = \"Stop\" \n\nfunction Get-Param($Name, [switch]$Required, $Default) {\n    $result = $null\n\n    if ($OctopusParameters -ne $null) {\n        $result = $OctopusParameters[$Name]\n    }\n\n    if ($result -eq $null) {\n        $variable = Get-Variable $Name -EA SilentlyContinue   \n        if ($variable -ne $null) {\n            $result = $variable.Value\n        }\n    }\n\n    if ($result -eq $null) {\n        if ($Required) {\n            throw \"Missing parameter value $Name\"\n        } else {\n            $result = $Default\n        }\n    }\n\n    return $result\n}\n\n& {\n    param(\n        [string]$DllFilePaths,\n        [string]$Uninstall\n    ) \n\n    $isUninstall = $($Uninstall.ToLower() -eq 'true')\n\n    Write-Host \"COM Component - Register\"\n    Write-Host \"DllFilePaths: $DllFilePaths\"\n\n    $DllFilePaths.split(\";\") | ForEach {\n        $dllFilePath = $_.Trim();\n        Write-Host $dllFilePath\n        \n        if($dllFilePath.Length -lt 1){\n            break;\n        }\n        \n        Write-Host \"Attempting to register $dllFilePath\"\n\n        if(!(Test-Path \"$dllFilePath\"))\n        {\n            Write-Host \"FILE NOT FOUND $dllFilePath.\" -ForegroundColor Yellow;\n            return;\n        }\n\n         Write-Host \"Attempting to register $dllFilePath\"\n    \n        $pinfo = New-Object System.Diagnostics.ProcessStartInfo\n\n        $cmd = \"$env:windir\\System32\\regsvr32.exe\"\n\n        Write-Host \"Registering with: $env:windir\\System32\\regsvr32.exe\"\n\n        $pinfo.FileName = \"$cmd\"\n\n        $pinfo.RedirectStandardError = $true\n        $pinfo.RedirectStandardOutput = $true\n        $pinfo.UseShellExecute = $false\n        \n        if($isUninstall){\n            $args = \"/u\"\n        }\n        $args = \"$args /s `\"$dllFilePath`\"\"\n\n        $pinfo.Arguments = $args\n        \n        $p = New-Object System.Diagnostics.Process\n\n        $p.StartInfo = $pinfo\n\n        Write-Host \"Command:\"\n        Write-Host \"$cmd $args\"\n\n        if ($p.Start())\n        {\n            Write-Host $p.StandardOutput.ReadToEnd().ToString()\n\n            if($p.ExitCode -ne 0)\n            {\n                \n                Write-Host \"FAILED $($p.ExitCode) - Register\" -ForegroundColor Red \n                Write-Host $p.StandardError.ReadToEnd() -ForegroundColor Red\n                                \n                throw $p.StandardError.ReadToEnd()\n            }\n            \n            Write-Host \"SUCCESS- Register\" -ForegroundColor Green \n        }\n\n       \n    }\n\n } `\n (Get-Param 'DllFilePaths' -Required) `\n (Get-Param 'Uninstall' -Required)",
    "Octopus.Action.Script.Syntax": "PowerShell"
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "DllFilePaths",
      "Label": "DllFilePaths",
      "HelpText": "List of dlls to be registered separated by a ; and can appear on separate lines",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "MultiLineText"
      }
    },
    {
      "Id": null,
      "Name": "Uninstall",
      "Label": "Un-register",
      "HelpText": null,
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-37-2018011412241438",
  "LogoAttachmentMimeType": "image/png"
}